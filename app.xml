<nesc xmlns="http://www.tinyos.net/nesC">
  <components>
    <component qname="TemperatureMonitorAppC" loc="3:TemperatureMonitorAppC.nc">
      <configuration/>
    </component>
    <component qname="TemperatureMonitorC" loc="3:TemperatureMonitorC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="47:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/MainC.nc">
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/platforms/mica/sim/PlatformC.nc">
      <documentation loc="1:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id$&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id$&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:27">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:23">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:22">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:21">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:20">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:18">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="10:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/platforms/mica/sim/MeasureClockC.nc">
      <documentation loc="3:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/platforms/mica/sim/MeasureClockC.nc">
        <short>&#10; Simulation version of MeasureClockC for the mica platform.</short>
        <long>&#10; Simulation version of MeasureClockC for the mica platform. See &#10; tos/platforms/mica/MeasureClockC.nc for more details.&#10;&#10; @author Phil Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMainP" loc="43:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimMainP.nc">
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="42:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TinySchedulerC.nc">
      <documentation loc="32:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TinySchedulerC.nc">
        <short>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).</short>
        <long>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SimSchedulerBasicP" loc="47:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimSchedulerBasicP.nc">
      <documentation loc="33:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMoteP" loc="45:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimMoteP.nc">
      <documentation loc="33:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimMoteP.nc">
        <short>&#10; The TOSSIM abstraction of a mote.</short>
        <long>&#10; The TOSSIM abstraction of a mote. By putting simulation state into&#10; a component, we can scale and reference this state automatically&#10; using nesC's rewriting, rather than managing and indexing into&#10; arrays manually.&#10;&#10; @author Phil Levis&#10; @date   August 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TossimActiveMessageC" loc="44:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimActiveMessageC.nc">
      <documentation loc="33:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/RandomC.nc">
      <documentation loc="33:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TemperatureMonitorAppC.SinkTimer" loc="44(TemperatureMonitorAppC.SinkTimer):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/TimerMilliP.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/platforms/mica/sim/HilTimerMilliC.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/platforms/mica/sim/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/platforms/mica/AlarmCounterMilliP.nc">
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x104c6a8c0"/>
            <typename><typedef-ref name="TMilli" ref="0x104c6ac30"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x1050949d0"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="50:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
      <documentation loc="32:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
        <short>&#10; The TOSSIM implementation of the Atm128 Timer0.</short>
        <long>&#10; The TOSSIM implementation of the Atm128 Timer0. It is built from a&#10; timer-specific counter component and a generic compare&#10; component. The counter component has an additional simulation-only&#10; interface to let the compare component know when its state has&#10; changed (e.g., TCNTX was set).&#10;&#10; @date November 22 2005&#10;&#10; @author Philip Levis &#60;pal@cs.stanford.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="48:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="1:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id$&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x104c6a8c0"/>
            <typename><typedef-ref name="TMilli" ref="0x104c6ac30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x104c6a8c0"/>
            <typename><typedef-ref name="TMilli" ref="0x104c6ac30"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x104c6a8c0"/>
            <typename><typedef-ref name="TMilli" ref="0x104c6ac30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TemperatureMonitorAppC.NodeTimer" loc="44(TemperatureMonitorAppC.NodeTimer):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TemperatureMonitorAppC.WaitTimer" loc="44(TemperatureMonitorAppC.WaitTimer):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TemperatureMonitorAppC.TempSensor" loc="1(TemperatureMonitorAppC.TempSensor):RandomSensorC.nc">
      <instance number="0">
        <component-ref qname="RandomSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TemperatureMonitorAppC.TempSensor.RandomReaderC" loc="1(TemperatureMonitorAppC.TempSensor.RandomReaderC):RandomReaderC.nc">
      <instance number="0">
        <component-ref qname="RandomReaderC"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="42:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/ActiveMessageC.nc">
      <documentation loc="33:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/ActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TossimPacketModelC" loc="60:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModelC.nc">
      <documentation loc="32:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_csma.h">
        <short>&#10;&#10; Configuration parameters for a CSMA link.</short>
        <long>&#10;&#10; Configuration parameters for a CSMA link.&#10;&#10; @author Philip Levis&#10; @date   Dec 10 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CpmModelC" loc="52:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/CpmModelC.nc">
      <documentation loc="32:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="56:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/ActiveMessageAddressC.nc">
      <documentation loc="49:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/ActiveMessageAddressC.nc">
        <short>&#10; Accessor methods for Active Messages.</short>
        <long>&#10; Accessor methods for Active Messages.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TemperatureMonitorAppC.AMSenderC" loc="47(TemperatureMonitorAppC.AMSenderC):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMSenderC.nc">
      <documentation loc="33:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:240">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TemperatureMonitorAppC.AMSenderC.SenderC" loc="47(TemperatureMonitorAppC.AMSenderC.SenderC):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x104bd87f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TemperatureMonitorAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(TemperatureMonitorAppC.AMSenderC.SenderC.AMQueueEntryP):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x104bd87f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMQueueP.nc">
      <documentation loc="33:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TemperatureMonitorAppC.AMReceiverC" loc="43(TemperatureMonitorAppC.AMReceiverC):/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMReceiverC.nc">
      <documentation loc="33:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:240">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x1050949d0" loc="23:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x1050949d0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x105094ce0" loc="23:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="37:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x104e37c20" loc="41:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x104e33020" loc="42:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x104e333b0" loc="43:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x104e33700" loc="44:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x104ed4020" loc="42:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x104ed43b0" loc="43:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x104ed4740" loc="44:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x104ed4a90" loc="45:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x105272790" loc="46:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x105272790"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x105272ac0" loc="46:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x10548b650" loc="45:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RandomReaderC" loc="1:RandomReaderC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x104e193e0" loc="40:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x104e19750" loc="40:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x104e19ac0" loc="40:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x1054e9330" loc="43:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x104bd87f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10522f1f0" loc="46:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10522f1f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x1050ba5a0" loc="23:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x1050ba5a0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x1050ba8b0" loc="23:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x105479b70" loc="47:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x104bd87f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x105469320" loc="43:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x104bd87f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RandomSensorC" loc="1:RandomSensorC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x105472860" loc="47:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x104bd87f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1052d5e20" loc="46:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1052d5e20"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SplitControl" loc="87:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x104cabe50" loc="113:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x104cabbd0" loc="113:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x104ca9390" loc="138:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x104ca9110" loc="138:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x104cab1f0" loc="104:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x104caa6e0" loc="130:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Boot.nc">
      <documentation loc="42:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x104c6ca40" loc="60:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Boot.nc">
        <documentation loc="51:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x104a4e350" loc="67:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x104a4eba0" loc="75:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x1050f7790" loc="38:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x1050f6020" loc="44:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x1050f7020" loc="32:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x1050f6830" loc="50:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x1050c7c20" loc="21:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x105065810"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x105065c30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x1050f8690" loc="27:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x105065810"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x105065c30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x1050f8410" loc="27:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x105065810"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x105065c30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacket" loc="44:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacket.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="strength" ref="0x104fc27a0" loc="45:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacket.nc">
        <interfacedef-ref qname="TossimPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x10443e8e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x104fc2520" loc="45:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Packet.nc">
      <documentation loc="42:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x104c8eab0" loc="65:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Packet.nc">
        <documentation loc="58:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x104c8e830" loc="65:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x104c8aba0" loc="78:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Packet.nc">
        <documentation loc="67:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x104c8a920" loc="78:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x104c86020" loc="126:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Packet.nc">
        <documentation loc="109:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x104c87910" loc="126:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x104c87c40" loc="126:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x104c87020" loc="106:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Packet.nc">
        <documentation loc="96:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x104c88050" loc="94:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Packet.nc">
        <documentation loc="80:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x104c89a70" loc="94:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x104c89da0" loc="94:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x105046930" loc="53:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x105046930"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x105075270" loc="61:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMSend.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x104c95d60" loc="80:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMSend.nc">
        <documentation loc="60:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x104bf8020"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x104c95410" loc="80:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x104bf8020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x104c95790" loc="80:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x104c95ac0" loc="80:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x104cb4620" loc="135:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMSend.nc">
        <documentation loc="126:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x104cb4020" loc="135:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x104cb4350" loc="135:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x104cb36d0" loc="123:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMSend.nc">
        <documentation loc="113:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x104cb72a0" loc="96:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMSend.nc">
        <documentation loc="82:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x104cb7020" loc="96:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x104cb67f0" loc="110:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMSend.nc">
        <documentation loc="98:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x104cb6210" loc="110:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x104cb6560" loc="110:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Read.nc">
      <documentation loc="33:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x104c93ad0" loc="49:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x104c93ad0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x104c903b0" loc="55:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Read.nc">
        <documentation loc="50:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x104c8f120" loc="63:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Read.nc">
        <documentation loc="57:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x104c93ad0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x104c90b30" loc="63:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x104c90e50" loc="63:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x104c93ad0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Random.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x104c676a0" loc="52:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Random.nc">
        <documentation loc="48:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x104440ba0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x104c6be80" loc="46:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Random.nc">
        <documentation loc="42:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x1050d58f0" loc="45:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10506ae50"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x1050692b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x1050d3e00" loc="53:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10505f9a0"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x10505fdc0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x1050d4ba0" loc="49:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x105062170"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x105062590"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x1050d35f0" loc="50:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x105062170"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x105062590"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x1050d3370" loc="50:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x105062170"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x105062590"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x1050d28a0" loc="54:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10505f9a0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x10505fdc0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x1050d2620" loc="54:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10505f9a0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x10505fdc0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x1050d4390" loc="46:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10506ae50"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x1050692b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x1050d4110" loc="46:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10506ae50"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x1050692b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Send.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x105465930" loc="75:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Send.nc">
        <documentation loc="57:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x105465370" loc="75:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1054656a0" loc="75:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x10545e160" loc="125:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Send.nc">
        <documentation loc="115:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x105460ae0" loc="125:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x105460e10" loc="125:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x105460270" loc="112:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Send.nc">
        <documentation loc="102:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x105462c40" loc="89:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Send.nc">
        <documentation loc="77:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1054629c0" loc="89:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x105461360" loc="100:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Send.nc">
        <documentation loc="91:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x105463d10" loc="100:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x1054610d0" loc="100:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x105043e30" loc="53:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x105043e30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x1050409a0" loc="64:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x105043e30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x105040720" loc="64:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x105043e30"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1050a3450" loc="56:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1050a3450"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x1050a3690" loc="56:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1050a3690"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x10509f2d0" loc="109:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1050a3690"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x1050a12b0" loc="78:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x1050a0900" loc="103:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1050a3690"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1050a3690"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x1050a0330" loc="103:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1050a3690"/></type-var>
          </variable>
          <variable name="dt" ref="0x1050a0670" loc="103:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1050a3690"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x1050a1a90" loc="88:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x10509fac0" loc="116:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1050a3690"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x1050a22a0" loc="66:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1050a3690"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x1050a2020" loc="66:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1050a3690"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x1050a2ad0" loc="73:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Init.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x104db2b10" loc="62:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Init.nc">
        <documentation loc="53:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x1050d00d0" loc="41:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1050d00d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x1050cc9f0" loc="74:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x1050cebf0" loc="58:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x1050d0a10" loc="48:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1050d00d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x1050cd390" loc="62:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x1050cb1f0" loc="80:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x1050ce440" loc="54:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1050d00d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x1050ce1c0" loc="54:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1050d00d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x1050cdb00" loc="65:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x1050cc270" loc="68:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Receive.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x104caf6e0" loc="78:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Receive.nc">
        <documentation loc="58:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
              <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x104c85d30" loc="78:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Receive.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x104caf0d0" loc="78:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Receive.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x104caf400" loc="78:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SimMote" loc="42:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimMote.nc">
      <documentation loc="32:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimMote.nc">
        <short>&#10; TOSSIM-specific interface to access a mote's state.</short>
        <long>&#10; TOSSIM-specific interface to access a mote's state. TinyOS programs&#10; should never use this interface.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="setEuid" ref="0x104f552a0" loc="44:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="euid" ref="0x104f55020" loc="44:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimMote.nc">
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getVariableInfo" ref="0x104f812c0" loc="47:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="size_t" ref="0x10438ca40"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="name" ref="0x104f828b0" loc="47:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="ptr" ref="0x104f82c10" loc="47:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x104f81020" loc="47:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="size_t" ref="0x10438ca40"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOff" ref="0x104f800e0" loc="49:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x104f81970" loc="48:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEuid" ref="0x104f588a0" loc="43:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x104f82190" loc="46:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartTime" ref="0x104f55a50" loc="45:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Counter.nc">
      <documentation loc="36:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10509bd10" loc="57:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10509bd10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x105098020" loc="57:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x105098020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x105098940" loc="64:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Counter.nc">
        <documentation loc="59:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x105098020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x105097a50" loc="76:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Counter.nc">
        <documentation loc="73:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x1050971f0" loc="71:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Counter.nc">
        <documentation loc="66:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x1050961f0" loc="82:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Counter.nc">
        <documentation loc="78:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x104deac40" loc="44:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x104de9390" loc="45:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x104decde0" loc="42:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x104de8270" loc="47:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x104dea530" loc="43:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x104de9ab0" loc="46:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x104dec020" loc="40:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x104dec6f0" loc="41:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x1053085f0" loc="59:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x105308370" loc="59:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x1053077d0" loc="71:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x105307550" loc="71:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x105304940" loc="85:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1053046c0" loc="85:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GainRadioModel" loc="47:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/GainRadioModel.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="putOnAirTo" ref="0x1052fb640" loc="48:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
            </type-int>
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x1048e39b0"/></typename>
            </type-int>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x1052fd200" loc="48:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x1052fd5a0" loc="49:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x1052fd8d0" loc="50:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
            </type-int>
          </variable>
          <variable name="endTime" ref="0x1052fdc70" loc="51:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x1048e39b0"/></typename>
            </type-int>
          </variable>
          <variable name="gain" ref="0x1052fb020" loc="52:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
          <variable name="reverseGain" ref="0x1052fb370" loc="53:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x105336350" loc="60:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1053360d0" loc="60:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearChannel" ref="0x1052fa740" loc="56:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPendingTransmission" ref="0x105337020" loc="57:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClearValue" ref="0x1052fa020" loc="55:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x1052fbce0" loc="55:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="acked" ref="0x105337970" loc="59:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1053376f0" loc="59:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x105336cf0" loc="61:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x105336a70" loc="61:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacketModel" loc="45:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModel.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x104fc05f0" loc="57:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="47:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x104fc4b50" loc="57:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x104fc0020" loc="57:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x104fc0350" loc="57:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x104fbed30" loc="85:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="79:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Signal that a packet was received.</short>
          <long>&#10; Signal that a packet was received. Note that there is no buffer&#10; swap: a component using this interface must copy out the message&#10; if it needs it.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x104fbeab0" loc="85:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x104fbf2a0" loc="69:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="59:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x104fbf020" loc="69:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x104fbe2b0" loc="76:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="71:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x104fbfba0" loc="76:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x104fbe020" loc="76:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x104fbc7d0" loc="87:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModel.nc">
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x104fbc550" loc="87:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x1050b1a40" loc="55:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x1050b1a40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x1050dd2d0" loc="98:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x1050de350" loc="87:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x1050ae390" loc="61:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x1050b1a40"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x1050ddcb0" loc="104:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x1050dda30" loc="104:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x1050dc510" loc="110:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x1050adc90" loc="75:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x1050ad500" loc="70:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x1050deb10" loc="93:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x1050aed40" loc="67:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x1050b1a40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x1050aeac0" loc="67:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x1050b1a40"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x1050ac420" loc="78:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x1050acb70" loc="81:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x104c9a9f0" loc="177:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x104bd8bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x104c9a770" loc="177:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x104ca5600" loc="88:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x104bf8020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x104ca5380" loc="88:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x104c8da00" loc="68:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x104bf8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x104c82520" loc="78:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x104bf8020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x104c822a0" loc="78:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x104ca2020" loc="121:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x104bf8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x104ca1950" loc="121:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x104ca1ca0" loc="121:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x104bf8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x104ca4a30" loc="103:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x104bf8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x104ca4450" loc="103:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x104ca47a0" loc="103:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x104bf8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x104c9e4a0" loc="147:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x104bd87f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x104c9e220" loc="147:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x104c9d850" loc="162:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x104bd87f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x104c9d2a0" loc="162:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x104c9d5c0" loc="162:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x104bd87f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x104c9f2a0" loc="136:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x104c9f020" loc="136:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x104c9c020" loc="187:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x104bd8bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x104c998c0" loc="187:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
                <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x104c99c10" loc="187:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x104bd8bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x104c9ce40" loc="195:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x104bd8bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x1046273b0" loc="57:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x104679350" loc="72:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x104627b00" loc="65:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
      <documentation loc="36:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x104c63350" loc="53:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x104c63350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x104c7f1f0" loc="136:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
        <documentation loc="132:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x104c61a60" loc="83:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
        <documentation loc="80:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x104c81820" loc="114:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
        <documentation loc="100:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x104c81250" loc="114:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x104c81590" loc="114:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x104c5fa60" loc="98:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
        <documentation loc="94:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x104c7e270" loc="151:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
        <documentation loc="146:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x104c7f980" loc="144:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
        <documentation loc="138:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x104c5f270" loc="92:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
        <documentation loc="86:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x104c62020" loc="64:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
        <documentation loc="56:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x104c63c40" loc="64:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x104c80820" loc="129:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
        <documentation loc="116:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x104c80250" loc="129:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x104c80590" loc="129:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x104c62ae0" loc="73:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
        <documentation loc="66:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x104c62860" loc="73:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x104c61350" loc="78:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
        <documentation loc="75:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
    <struct loc="94:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h" ref="0x104dbd110" defined="" size="I:1" alignment="I:1">
      <field name="mux" ref="0x104dbd320" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="adlar" ref="0x104dbd3d0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="refs" ref="0x104dbd480" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__float2" loc="649:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include-fixed/math.h" ref="0x104800780" defined="" size="I:8" alignment="I:4">
      <field name="__sinval" ref="0x104800c90" bit-offset="I:0" size="I:4">
        <type-float cname="float" size="I:4" alignment="I:4"></type-float>
      </field>
      <field name="__cosval" ref="0x104800d40" bit-offset="I:32" size="I:4">
        <type-float cname="float" size="I:4" alignment="I:4"></type-float>
      </field>
    </struct>
    <attribute name="bnd" loc="9:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x104391170" defined="" size="I:16" alignment="I:8">
      <field name="lo" ref="0x104391600" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x1043916b0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <struct loc="239:/usr/include/inttypes.h" ref="0x10444d1a0" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x10444d3b0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="intmax_t" ref="0x104449210"/></typename>
        </type-int>
      </field>
      <field name="rem" ref="0x10444d460" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="intmax_t" ref="0x104449210"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="82:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x10506d650" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="196:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x10508c170" defined="" size="I:1" alignment="I:1">
      <field name="wgm10" ref="0x10508c380" bit-offset="I:0" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="comC" ref="0x10508c430" bit-offset="I:2" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="comB" ref="0x10508c4e0" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="comA" ref="0x10508c590" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="rusage_info_v2" loc="226:/usr/include/sys/resource.h" ref="0x104697470" defined="" size="I:160" alignment="I:8">
      <field name="ri_uuid" ref="0x104693540" bit-offset="I:0" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="ri_user_time" ref="0x1046935f0" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_system_time" ref="0x1046936a0" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_pkg_idle_wkups" ref="0x104693750" bit-offset="I:256" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_interrupt_wkups" ref="0x104693800" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_pageins" ref="0x1046938b0" bit-offset="I:384" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_wired_size" ref="0x104693960" bit-offset="I:448" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_resident_size" ref="0x104693a10" bit-offset="I:512" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_phys_footprint" ref="0x104693ac0" bit-offset="I:576" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_proc_start_abstime" ref="0x104693b70" bit-offset="I:640" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_proc_exit_abstime" ref="0x104693c20" bit-offset="I:704" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_child_user_time" ref="0x104693cd0" bit-offset="I:768" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_child_system_time" ref="0x104693d80" bit-offset="I:832" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_child_pkg_idle_wkups" ref="0x104693f30" bit-offset="I:896" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_child_interrupt_wkups" ref="0x104692020" bit-offset="I:960" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_child_pageins" ref="0x1046920d0" bit-offset="I:1024" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_child_elapsed_abstime" ref="0x104692180" bit-offset="I:1088" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_diskio_bytesread" ref="0x104692230" bit-offset="I:1152" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_diskio_byteswritten" ref="0x1046922e0" bit-offset="I:1216" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="_opaque_pthread_cond_t" loc="65:/usr/include/sys/_types.h" ref="0x104425020" defined="" size="I:48" alignment="I:8">
      <field name="__sig" ref="0x104425630" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x1044256e0" bit-offset="I:64" size="I:40">
        <type-array elements="I:40" size="I:40" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <enum loc="26:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/AM.h" ref="0x104bf8850" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="tossim_metadata" loc="18:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimRadioMsg.h" ref="0x104bf4200" defined="" size="I:4" alignment="I:1">
      <field name="strength" ref="0x104bf4a90" bit-offset="I:0" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x1045d02d0"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x104bf4b40" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x1045cd020"/></typename>
        </type-int>
      </field>
      <field name="time" ref="0x104bf4bf0" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x1045cd740"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct loc="82:/usr/include/stdlib.h" ref="0x1046b9020" defined="" size="I:8" alignment="I:4">
      <field name="quot" ref="0x1046b9230" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rem" ref="0x1046b92e0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="gain_entry" loc="53:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_gain.h" ref="0x104aa3dd0" defined="" size="I:24" alignment="I:8">
      <field name="mote" ref="0x104aa1630" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="gain" ref="0x104aa16e0" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="next" ref="0x104aa1790" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x104aa3dd0"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct name="proc_rlimit_control_wakeupmon" loc="317:/usr/include/sys/resource.h" ref="0x10469c020" defined="" size="I:8" alignment="I:4">
      <field name="wm_flags" ref="0x10469c630" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
        </type-int>
      </field>
      <field name="wm_rate" ref="0x10469c6e0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="int32_t" ref="0x104440020"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="deputy_scope"  loc="NONE" ref="0x10438aa20" size="V:" alignment="V:">
    </attribute>
    <struct name="timeval" loc="30:/usr/include/sys/_types/_timeval.h" ref="0x1046804d0" defined="" size="I:16" alignment="I:8">
      <field name="tv_sec" ref="0x104680b80" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__darwin_time_t" ref="0x104421d60"/></typename>
        </type-int>
      </field>
      <field name="tv_usec" ref="0x104680c30" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_suseconds_t" ref="0x104436470"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="fd_set" loc="46:/usr/include/sys/_types/_fd_def.h" ref="0x1049e7080" defined="" size="I:128" alignment="I:4">
      <field name="fds_bits" ref="0x1049e58d0" bit-offset="I:0" size="I:128">
        <type-array elements="I:32" size="I:128" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__int32_t" ref="0x10441b880"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <struct name="sim_gain_noise" loc="3:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_gain.c" ref="0x104ab1150" defined="" size="I:16" alignment="I:8">
      <field name="mean" ref="0x104ab1720" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="range" ref="0x104ab17d0" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <struct name="sigaction" loc="283:/usr/include/sys/signal.h" ref="0x104685020" defined="" size="I:16" alignment="I:8">
      <field name="__sigaction_u" ref="0x1046858a0" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:8"><union-ref name="__sigaction_u" ref="0x1046745e0"/></type-tag>
      </field>
      <field name="sa_mask" ref="0x104685950" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="sigset_t" ref="0x10466fa60"/></typename>
        </type-int>
      </field>
      <field name="sa_flags" ref="0x104685a00" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="nonnull" loc="8:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x104390660" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x104390ad0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="_opaque_pthread_t" loc="72:/usr/include/sys/_types.h" ref="0x10442a3b0" defined="" size="I:1184" alignment="I:8">
      <field name="__sig" ref="0x10442ad40" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__cleanup_stack" ref="0x10442adf0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="__darwin_pthread_handler_rec" ref="0x104423200"/></type-tag>
        </type-pointer>
      </field>
      <field name="__opaque" ref="0x10442aea0" bit-offset="I:128" size="I:1168">
        <type-array elements="I:1168" size="I:1168" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <attribute name="number"  loc="NONE" ref="0x104389020" size="V:" alignment="V:">
    </attribute>
    <struct name="__double2" loc="650:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include-fixed/math.h" ref="0x1047ff020" defined="" size="I:16" alignment="I:8">
      <field name="__sinval" ref="0x1047ff530" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="__cosval" ref="0x1047ff5e0" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <struct name="sigstack" loc="364:/usr/include/sys/signal.h" ref="0x1046835b0" defined="" size="I:16" alignment="I:8">
      <field name="ss_sp" ref="0x104683b50" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="ss_onstack" ref="0x104683c00" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="51:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_noise.h" ref="0x104a19330" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="40:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.h" ref="0x104c6a8c0" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x104c6aad0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union loc="76:/usr/include/i386/_types.h" ref="0x10441d8c0" defined="" size="I:128" alignment="I:8">
      <field name="__mbstate8" ref="0x10441dad0" bit-offset="I:0" size="I:128">
        <type-array elements="I:128" size="I:128" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_mbstateL" ref="0x10441db80" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <union loc="167:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x105090b10" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x105090d20" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x105090dd0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x1050902f0"/></type-tag>
      </field>
    </union>
    <struct name="node" loc="62:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/heap.c" ref="0x10498b080" defined="" size="I:16" alignment="I:8">
      <field name="data" ref="0x10498b680" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="key" ref="0x10498b730" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <union loc="297:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x1050ab770" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x1050ab980" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x1050aba30" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x105079e70"/></type-tag>
      </field>
    </union>
    <enum loc="120:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h" ref="0x104dbbb20" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="150:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h" ref="0x104db7d70" defined="" size="I:1" alignment="I:1">
      <field name="adps" ref="0x104db6020" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="adie" ref="0x104db60d0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="adif" ref="0x104db6180" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="adfr" ref="0x104db6230" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="adsc" ref="0x104db62e0" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="aden" ref="0x104db6390" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__darwin_x86_debug_state32" loc="422:/usr/include/mach/i386/_structs.h" ref="0x104644460" defined="" size="I:32" alignment="I:4">
      <field name="__dr0" ref="0x1046434e0" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr1" ref="0x104643590" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr2" ref="0x104643640" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr3" ref="0x1046436f0" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr4" ref="0x1046437a0" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr5" ref="0x104643850" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr6" ref="0x104643900" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr7" ref="0x1046439b0" bit-offset="I:224" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <nx_struct name="serial_packet" loc="131:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/serial/Serial.h" ref="0x104bebe10" defined="" size="I:7" alignment="I:1">
      <field name="header" ref="0x104bea540" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x104bec9b0"/>
          <typename><typedef-ref name="serial_header_t" ref="0x104bebab0"/></typename>
        </type-tag>
      </field>
      <field name="data" ref="0x104bea5f0" bit-offset="I:56" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x1045cd020"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <union loc="120:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x105065810" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x105065a20" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x105065ad0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x1050650b0"/></type-tag>
      </field>
    </union>
    <struct loc="67:/usr/include/runetype.h" ref="0x104823290" defined="" size="I:16" alignment="I:8">
      <field name="__nranges" ref="0x1048234a0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ranges" ref="0x104823550" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref ref="0x1048245b0"/>
            <typename><typedef-ref name="_RuneEntry" ref="0x104824b30"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <attribute name="integer"  loc="NONE" ref="0x104386cf0" size="V:" alignment="V:">
    </attribute>
    <attribute name="exactlyonce" loc="99:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/tos.h" ref="0x104911e20" defined="" size="I:0" alignment="I:1">
    </attribute>
    <union name="message_footer" loc="55:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/platform_message.h" ref="0x104c09380" defined="" size="I:2" alignment="I:1">
      <field name="tossim" ref="0x104c09880" bit-offset="I:0" size="I:2">
        <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x104bf5820"/>
          <typename><typedef-ref name="tossim_footer_t" ref="0x104bf5e40"/></typename>
        </type-tag>
      </field>
    </union>
    <enum loc="75:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x10506e8a0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union name="message_metadata" loc="59:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/platform_message.h" ref="0x104c09d60" defined="" size="I:4" alignment="I:1">
      <field name="tossim" ref="0x104c082c0" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x104bf4200"/>
          <typename><typedef-ref name="tossim_metadata_t" ref="0x104bf4d50"/></typename>
        </type-tag>
      </field>
    </union>
    <attribute name="combine"  loc="NONE" ref="0x10438a340" size="V:" alignment="V:">
      <field name="fn" ref="0x10438a550" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <struct name="__darwin_mcontext64" loc="76:/usr/include/i386/_mcontext.h" ref="0x10466a360" defined="" size="I:712" alignment="I:8">
      <field name="__es" ref="0x10466ae50" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__darwin_x86_exception_state64" ref="0x104665740"/></type-tag>
      </field>
      <field name="__ss" ref="0x10466af00" bit-offset="I:128" size="I:168">
        <type-tag size="I:168" alignment="I:8"><struct-ref name="__darwin_x86_thread_state64" ref="0x104643cb0"/></type-tag>
      </field>
      <field name="__fs" ref="0x104669020" bit-offset="I:1472" size="I:524">
        <type-tag size="I:524" alignment="I:4"><struct-ref name="__darwin_x86_float_state64" ref="0x104648a30"/></type-tag>
      </field>
    </struct>
    <union name="__sigaction_u" loc="266:/usr/include/sys/signal.h" ref="0x1046745e0" defined="" size="I:8" alignment="I:8">
      <field name="__sa_handler" ref="0x10467ec60" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="__sa_sigaction" ref="0x10467ed30" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:104" alignment="I:8"><struct-ref name="__siginfo" ref="0x1046773f0"/></type-tag>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
    </union>
    <struct name="__darwin_fp_status" loc="147:/usr/include/mach/i386/_structs.h" ref="0x104626d40" defined="" size="I:2" alignment="I:2">
      <field name="__invalid" ref="0x104623bc0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__denorm" ref="0x104623c70" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__zdiv" ref="0x104623d20" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__ovrfl" ref="0x104623dd0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__undfl" ref="0x104623e80" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__precis" ref="0x104623f30" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__stkflt" ref="0x104622020" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__errsumm" ref="0x1046220d0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__c0" ref="0x104622180" bit-offset="I:8" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__c1" ref="0x104622230" bit-offset="I:9" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__c2" ref="0x1046222e0" bit-offset="I:10" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__tos" ref="0x104622390" bit-offset="I:11" bit-size="I:3">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__c3" ref="0x104622440" bit-offset="I:14" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__busy" ref="0x1046225f0" bit-offset="I:15" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
    </struct>
    <struct name="__darwin_sigaltstack" loc="36:/usr/include/sys/_types/_sigaltstack.h" ref="0x104673740" defined="" size="I:24" alignment="I:8">
      <field name="ss_sp" ref="0x104673f00" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="ss_size" ref="0x104672020" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__darwin_size_t" ref="0x10441fbf0"/></typename>
        </type-int>
      </field>
      <field name="ss_flags" ref="0x1046720d0" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct loc="93:/usr/include/stdlib.h" ref="0x1046b74a0" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x1046b76b0" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x1046b7760" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <nx_struct name="serial_header" loc="123:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/serial/Serial.h" ref="0x104bec9b0" defined="" size="I:7" alignment="I:1">
      <field name="dest" ref="0x104beb690" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x104bd8430"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x104beb740" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x104bd8430"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x104beb7f0" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x1045cd020"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x104beb8a0" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x104bd8020"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x104beb950" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x104bd9aa0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <union loc="193:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x10508c8a0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x10508cab0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x10508cb60" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10508c170"/></type-tag>
      </field>
    </union>
    <union name="message_header" loc="50:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/platform_message.h" ref="0x104be8560" defined="" size="I:7" alignment="I:1">
      <field name="tossim" ref="0x104be8c80" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x104bf63c0"/>
          <typename><typedef-ref name="tossim_header_t" ref="0x104bf54c0"/></typename>
        </type-tag>
      </field>
      <field name="serial" ref="0x104be8d30" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x104bec9b0"/>
          <typename><typedef-ref name="serial_header_t" ref="0x104bebab0"/></typename>
        </type-tag>
      </field>
    </union>
    <enum loc="52:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x105072080" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="timespec" loc="30:/usr/include/sys/_types/_timespec.h" ref="0x1049f9960" defined="" size="I:16" alignment="I:8">
      <field name="tv_sec" ref="0x1049f9f40" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__darwin_time_t" ref="0x104421d60"/></typename>
        </type-int>
      </field>
      <field name="tv_nsec" ref="0x1049f7020" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <attribute name="count" loc="11:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x1043938d0" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x104393c10" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum loc="25:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h" ref="0x104cf0770" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="72:/usr/include/runetype.h" ref="0x104823e80" defined="" size="I:20" alignment="I:4">
      <field name="__name" ref="0x1048340e0" bit-offset="I:0" size="I:14">
        <type-array elements="I:14" size="I:14" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__mask" ref="0x104834190" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10441bc50"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="bnd_nok" loc="10:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x104391d00" defined="" size="I:16" alignment="I:8">
      <field name="lo" ref="0x1043931e0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x104393290" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <struct name="timezone" loc="124:/usr/include/sys/time.h" ref="0x1049f6620" defined="" size="I:8" alignment="I:4">
      <field name="tz_minuteswest" ref="0x1049f6bd0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tz_dsttime" ref="0x1049f6c80" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="58:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h" ref="0x104d9d2b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union name="wait" loc="194:/usr/include/sys/wait.h" ref="0x1046afb30" defined="" size="I:4" alignment="I:4">
      <field name="w_status" ref="0x1046acc30" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_T" ref="0x1046acce0" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x1046ae840"/></type-tag>
      </field>
      <field name="w_S" ref="0x1046acd90" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x1046ac630"/></type-tag>
      </field>
    </union>
    <struct name="__darwin_ucontext" loc="34:/usr/include/sys/_types/_ucontext.h" ref="0x104672810" defined="" size="I:56" alignment="I:8">
      <field name="uc_onstack" ref="0x104671990" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="uc_sigmask" ref="0x104671a40" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_sigset_t" ref="0x104436020"/></typename>
        </type-int>
      </field>
      <field name="uc_stack" ref="0x104671af0" bit-offset="I:64" size="I:24">
        <type-tag size="I:24" alignment="I:8"><struct-ref name="__darwin_sigaltstack" ref="0x104673740"/></type-tag>
      </field>
      <field name="uc_link" ref="0x104671ba0" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:56" alignment="I:8"><struct-ref name="__darwin_ucontext" ref="0x104672810"/></type-tag>
        </type-pointer>
      </field>
      <field name="uc_mcsize" ref="0x104671c50" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__darwin_size_t" ref="0x10441fbf0"/></typename>
        </type-int>
      </field>
      <field name="uc_mcontext" ref="0x104671d00" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:712" alignment="I:8"><struct-ref name="__darwin_mcontext64" ref="0x10466a360"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct name="_opaque_pthread_once_t" loc="69:/usr/include/sys/_types.h" ref="0x1044286a0" defined="" size="I:16" alignment="I:8">
      <field name="__sig" ref="0x104428cb0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x104428d60" bit-offset="I:64" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="rusage_info_v0" loc="192:/usr/include/sys/resource.h" ref="0x104686450" defined="" size="I:96" alignment="I:8">
      <field name="ri_uuid" ref="0x1046900e0" bit-offset="I:0" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="ri_user_time" ref="0x104690190" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_system_time" ref="0x104690240" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_pkg_idle_wkups" ref="0x1046902f0" bit-offset="I:256" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_interrupt_wkups" ref="0x1046903a0" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_pageins" ref="0x104690450" bit-offset="I:384" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_wired_size" ref="0x104690500" bit-offset="I:448" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_resident_size" ref="0x1046905b0" bit-offset="I:512" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_phys_footprint" ref="0x104690660" bit-offset="I:576" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_proc_start_abstime" ref="0x104690710" bit-offset="I:640" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_proc_exit_abstime" ref="0x1046907c0" bit-offset="I:704" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="sim_event" loc="53:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_event_queue.h" ref="0x1048ec6d0" defined="" size="I:48" alignment="I:8">
      <field name="time" ref="0x1048e9740" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x1048e39b0"/></typename>
        </type-int>
      </field>
      <field name="mote" ref="0x1048e97f0" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="force" ref="0x1048e98a0" bit-offset="I:128" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
        </type-int>
      </field>
      <field name="cancelled" ref="0x1048e9950" bit-offset="I:136" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
        </type-int>
      </field>
      <field name="data" ref="0x1048e9a00" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="handle" ref="0x1048e9ab0" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x1048ec6d0"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x1048ecac0"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="cleanup" ref="0x1048e9b80" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x1048ec6d0"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x1048ecac0"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
    </struct>
    <struct loc="41:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.h" ref="0x104c640c0" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x104c642d0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="__siginfo" loc="174:/usr/include/sys/signal.h" ref="0x1046773f0" defined="" size="I:104" alignment="I:8">
      <field name="si_signo" ref="0x104675950" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="si_errno" ref="0x104675a00" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="si_code" ref="0x104675ab0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="si_pid" ref="0x104675b60" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="pid_t" ref="0x10461ac90"/></typename>
        </type-int>
      </field>
      <field name="si_uid" ref="0x104675c10" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uid_t" ref="0x10466e020"/></typename>
        </type-int>
      </field>
      <field name="si_status" ref="0x104675cc0" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="si_addr" ref="0x104675d70" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="si_value" ref="0x104675e20" bit-offset="I:256" size="I:8">
        <type-tag size="I:8" alignment="I:8"><union-ref name="sigval" ref="0x10466e2f0"/></type-tag>
      </field>
      <field name="si_band" ref="0x104675ed0" bit-offset="I:320" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__pad" ref="0x104674020" bit-offset="I:384" size="I:56">
        <type-array elements="I:7" size="I:56" alignment="I:8">
          <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
        </type-array>
      </field>
    </struct>
    <struct loc="123:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x1050650b0" defined="" size="I:1" alignment="I:1">
      <field name="tcr0ub" ref="0x1050652c0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="ocr0ub" ref="0x105065370" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="tcn0ub" ref="0x105065420" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="as0" ref="0x1050654d0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x105065580" bit-offset="I:4" bit-size="I:4">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
    </struct>
    <nx_struct name="tossim_footer" loc="14:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimRadioMsg.h" ref="0x104bf5820" defined="" size="I:2" alignment="I:1">
      <field name="crc" ref="0x104bf5ce0" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x1045d91f0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct loc="218:/usr/include/sys/wait.h" ref="0x1046ac630" defined="" size="I:4" alignment="I:4">
      <field name="w_Stopval" ref="0x1046ac840" bit-offset="I:0" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_Stopsig" ref="0x1046ac8f0" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_Filler" ref="0x1046ac9a0" bit-offset="I:16" bit-size="I:16">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="63:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_log.c" ref="0x104917770" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_packet" loc="59:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_packet.h" ref="0x104bc8db0" defined="" size="I:0" alignment="I:1">
    </struct>
    <struct loc="42:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.h" ref="0x104c64870" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x104c64a80" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="47:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_log.c" ref="0x10491a430" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct ref="0x104384530" size="V:" alignment="V:">
    </struct>
    <struct loc="87:/usr/include/stdlib.h" ref="0x1046b9a00" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x1046b9c10" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x1046b9cc0" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum loc="138:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h" ref="0x104db9880" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="NotReadyMessage" loc="21:TemperatureMonitor.h" ref="0x104c4fd10" defined="" size="I:2" alignment="I:1">
      <field name="idRequest" ref="0x104c6f260" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x1045cd740"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct name="__darwin_mcontext_avx64" loc="84:/usr/include/i386/_mcontext.h" ref="0x1046692e0" defined="" size="I:1032" alignment="I:8">
      <field name="__es" ref="0x104669dc0" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__darwin_x86_exception_state64" ref="0x104665740"/></type-tag>
      </field>
      <field name="__ss" ref="0x104669e70" bit-offset="I:128" size="I:168">
        <type-tag size="I:168" alignment="I:8"><struct-ref name="__darwin_x86_thread_state64" ref="0x104643cb0"/></type-tag>
      </field>
      <field name="__fs" ref="0x104669f20" bit-offset="I:1472" size="I:844">
        <type-tag size="I:844" alignment="I:4"><struct-ref name="__darwin_x86_avx_state64" ref="0x10464f920"/></type-tag>
      </field>
    </struct>
    <nx_struct name="serial_metadata" loc="136:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/serial/Serial.h" ref="0x104beaba0" defined="" size="I:1" alignment="I:1">
      <field name="ack" ref="0x104be80a0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x1045cd020"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct name="__darwin_mcontext32" loc="38:/usr/include/i386/_mcontext.h" ref="0x10466d4c0" defined="" size="I:600" alignment="I:4">
      <field name="__es" ref="0x10466b020" bit-offset="I:0" size="I:12">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="__darwin_i386_exception_state" ref="0x10463b480"/></type-tag>
      </field>
      <field name="__ss" ref="0x10466b0d0" bit-offset="I:96" size="I:64">
        <type-tag size="I:64" alignment="I:4"><struct-ref name="__darwin_i386_thread_state" ref="0x104618af0"/></type-tag>
      </field>
      <field name="__fs" ref="0x10466b180" bit-offset="I:608" size="I:524">
        <type-tag size="I:524" alignment="I:4"><struct-ref name="__darwin_i386_float_state" ref="0x1046291e0"/></type-tag>
      </field>
    </struct>
    <struct loc="60:/usr/include/runetype.h" ref="0x1048245b0" defined="" size="I:24" alignment="I:8">
      <field name="__min" ref="0x1048247c0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_rune_t" ref="0x104420910"/></typename>
        </type-int>
      </field>
      <field name="__max" ref="0x104824870" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_rune_t" ref="0x104420910"/></typename>
        </type-int>
      </field>
      <field name="__map" ref="0x104824920" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_rune_t" ref="0x104420910"/></typename>
        </type-int>
      </field>
      <field name="__types" ref="0x1048249d0" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__uint32_t" ref="0x10441bc50"/></typename>
          </type-int>
        </type-pointer>
      </field>
    </struct>
    <attribute name="atmostonce" loc="97:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/tos.h" ref="0x104911720" defined="" size="I:0" alignment="I:1">
    </attribute>
    <struct name="sigvec" loc="345:/usr/include/sys/signal.h" ref="0x1046845b0" defined="" size="I:16" alignment="I:8">
      <field name="sv_handler" ref="0x104683200" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="sv_mask" ref="0x1046832d0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="sv_flags" ref="0x104683380" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="673:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h" ref="0x104d1f980" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="253:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x105083db0" defined="" size="I:1" alignment="I:1">
      <field name="rsvd" ref="0x105082020" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="focC" ref="0x1050820d0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="focB" ref="0x105082180" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="focA" ref="0x105082230" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="_opaque_pthread_rwlockattr_t" loc="71:/usr/include/sys/_types.h" ref="0x104429a10" defined="" size="I:24" alignment="I:8">
      <field name="__sig" ref="0x10442a0a0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x10442a150" bit-offset="I:64" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct loc="170:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x1050902f0" defined="" size="I:1" alignment="I:1">
      <field name="psr321" ref="0x105090500" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="psr0" ref="0x1050905b0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="pud" ref="0x105090660" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="acme" ref="0x105090710" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x1050907c0" bit-offset="I:4" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="tsm" ref="0x105090870" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="hwevent"  loc="NONE" ref="0x104389a90" size="V:" alignment="V:">
    </attribute>
    <enum loc="4:TemperatureMonitor.h" ref="0x10438d210" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="132:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h" ref="0x104dbae80" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="hashtable" ref="0x104910cb0" size="V:" alignment="V:">
    </struct>
    <union loc="150:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x10505f9a0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x10505fbb0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x10505fc60" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10505f020"/></type-tag>
      </field>
    </union>
    <struct name="heap" loc="61:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/heap.h" ref="0x10497c690" defined="" size="I:24" alignment="I:8">
      <field name="size" ref="0x10497b620" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="data" ref="0x10497b6d0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="private_size" ref="0x10497b780" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="safe"  loc="NONE" ref="0x10438ace0" size="V:" alignment="V:">
    </attribute>
    <struct name="__darwin_i386_thread_state" loc="43:/usr/include/mach/i386/_structs.h" ref="0x104618af0" defined="" size="I:64" alignment="I:4">
      <field name="__eax" ref="0x10461f930" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ebx" ref="0x10461f9e0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ecx" ref="0x10461fa90" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__edx" ref="0x10461fb40" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__edi" ref="0x10461fbf0" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__esi" ref="0x10461fca0" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ebp" ref="0x10461fd50" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__esp" ref="0x10461fe00" bit-offset="I:224" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ss" ref="0x10461feb0" bit-offset="I:256" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__eflags" ref="0x10461e020" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__eip" ref="0x10461e0d0" bit-offset="I:320" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__cs" ref="0x10461e180" bit-offset="I:352" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ds" ref="0x10461e230" bit-offset="I:384" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__es" ref="0x10461e3e0" bit-offset="I:416" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__fs" ref="0x10461e490" bit-offset="I:448" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__gs" ref="0x10461e540" bit-offset="I:480" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="__darwin_i386_avx_state" loc="269:/usr/include/mach/i386/_structs.h" ref="0x104633390" defined="" size="I:716" alignment="I:4">
      <field name="__fpu_reserved" ref="0x104636200" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
      <field name="__fpu_fcw" ref="0x1046362b0" bit-offset="I:64" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_control" ref="0x10461e7f0"/></type-tag>
      </field>
      <field name="__fpu_fsw" ref="0x104636360" bit-offset="I:80" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_status" ref="0x104626d40"/></type-tag>
      </field>
      <field name="__fpu_ftw" ref="0x104636410" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10439fd50"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv1" ref="0x1046364c0" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10439fd50"/></typename>
        </type-int>
      </field>
      <field name="__fpu_fop" ref="0x104636570" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10441b500"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ip" ref="0x104636620" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10441bc50"/></typename>
        </type-int>
      </field>
      <field name="__fpu_cs" ref="0x1046366d0" bit-offset="I:160" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10441b500"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv2" ref="0x104636780" bit-offset="I:176" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10441b500"/></typename>
        </type-int>
      </field>
      <field name="__fpu_dp" ref="0x104636830" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10441bc50"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ds" ref="0x1046368e0" bit-offset="I:224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10441b500"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv3" ref="0x104636990" bit-offset="I:240" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10441b500"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsr" ref="0x104636a40" bit-offset="I:256" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10441bc50"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsrmask" ref="0x104636bf0" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10441bc50"/></typename>
        </type-int>
      </field>
      <field name="__fpu_stmm0" ref="0x104636ca0" bit-offset="I:320" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm1" ref="0x104636d50" bit-offset="I:448" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm2" ref="0x104636e00" bit-offset="I:576" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm3" ref="0x104636eb0" bit-offset="I:704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm4" ref="0x10463e020" bit-offset="I:832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm5" ref="0x10463e0d0" bit-offset="I:960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm6" ref="0x10463e180" bit-offset="I:1088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm7" ref="0x10463e230" bit-offset="I:1216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_xmm0" ref="0x10463e2e0" bit-offset="I:1344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm1" ref="0x10463e390" bit-offset="I:1472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm2" ref="0x10463e440" bit-offset="I:1600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm3" ref="0x10463e6f0" bit-offset="I:1728" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm4" ref="0x10463e7a0" bit-offset="I:1856" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm5" ref="0x10463e850" bit-offset="I:1984" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm6" ref="0x10463e900" bit-offset="I:2112" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm7" ref="0x10463e9b0" bit-offset="I:2240" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_rsrv4" ref="0x10463ea60" bit-offset="I:2368" size="I:224">
        <type-array elements="I:224" size="I:224" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_reserved1" ref="0x10463eb10" bit-offset="I:4160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__avx_reserved1" ref="0x10463ebc0" bit-offset="I:4192" size="I:64">
        <type-array elements="I:64" size="I:64" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_ymmh0" ref="0x10463ec70" bit-offset="I:4704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_ymmh1" ref="0x10463ed20" bit-offset="I:4832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_ymmh2" ref="0x10463edd0" bit-offset="I:4960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_ymmh3" ref="0x10463ee80" bit-offset="I:5088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_ymmh4" ref="0x10463ef30" bit-offset="I:5216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_ymmh5" ref="0x10463b020" bit-offset="I:5344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_ymmh6" ref="0x10463b0d0" bit-offset="I:5472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_ymmh7" ref="0x10463b180" bit-offset="I:5600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
    </struct>
    <enum loc="102:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/serial/Serial.h" ref="0x104bf1080" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__darwin_x86_float_state64" loc="509:/usr/include/mach/i386/_structs.h" ref="0x104648a30" defined="" size="I:524" alignment="I:4">
      <field name="__fpu_reserved" ref="0x104653720" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
      <field name="__fpu_fcw" ref="0x1046537d0" bit-offset="I:64" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_control" ref="0x10461e7f0"/></type-tag>
      </field>
      <field name="__fpu_fsw" ref="0x104653880" bit-offset="I:80" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_status" ref="0x104626d40"/></type-tag>
      </field>
      <field name="__fpu_ftw" ref="0x104653930" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10439fd50"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv1" ref="0x1046539e0" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10439fd50"/></typename>
        </type-int>
      </field>
      <field name="__fpu_fop" ref="0x104653a90" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10441b500"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ip" ref="0x104653b40" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10441bc50"/></typename>
        </type-int>
      </field>
      <field name="__fpu_cs" ref="0x104653bf0" bit-offset="I:160" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10441b500"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv2" ref="0x104653ca0" bit-offset="I:176" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10441b500"/></typename>
        </type-int>
      </field>
      <field name="__fpu_dp" ref="0x104653d50" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10441bc50"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ds" ref="0x104653e00" bit-offset="I:224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10441b500"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv3" ref="0x104653eb0" bit-offset="I:240" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10441b500"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsr" ref="0x104652020" bit-offset="I:256" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10441bc50"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsrmask" ref="0x1046521d0" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10441bc50"/></typename>
        </type-int>
      </field>
      <field name="__fpu_stmm0" ref="0x104652280" bit-offset="I:320" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm1" ref="0x104652330" bit-offset="I:448" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm2" ref="0x1046523e0" bit-offset="I:576" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm3" ref="0x104652490" bit-offset="I:704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm4" ref="0x104652540" bit-offset="I:832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm5" ref="0x1046525f0" bit-offset="I:960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm6" ref="0x1046526a0" bit-offset="I:1088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm7" ref="0x104652750" bit-offset="I:1216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_xmm0" ref="0x104652800" bit-offset="I:1344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm1" ref="0x1046528b0" bit-offset="I:1472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm2" ref="0x104652960" bit-offset="I:1600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm3" ref="0x104652c10" bit-offset="I:1728" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm4" ref="0x104652cc0" bit-offset="I:1856" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm5" ref="0x104652d70" bit-offset="I:1984" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm6" ref="0x104652e20" bit-offset="I:2112" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm7" ref="0x104652ed0" bit-offset="I:2240" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm8" ref="0x10464f020" bit-offset="I:2368" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm9" ref="0x10464f0d0" bit-offset="I:2496" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm10" ref="0x10464f180" bit-offset="I:2624" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm11" ref="0x10464f230" bit-offset="I:2752" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm12" ref="0x10464f2e0" bit-offset="I:2880" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm13" ref="0x10464f390" bit-offset="I:3008" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm14" ref="0x10464f440" bit-offset="I:3136" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm15" ref="0x10464f4f0" bit-offset="I:3264" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_rsrv4" ref="0x10464f5a0" bit-offset="I:3392" size="I:96">
        <type-array elements="I:96" size="I:96" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_reserved1" ref="0x10464f650" bit-offset="I:4160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="__darwin_x86_exception_state64" loc="751:/usr/include/mach/i386/_structs.h" ref="0x104665740" defined="" size="I:16" alignment="I:8">
      <field name="__trapno" ref="0x1046641c0" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10441b500"/></typename>
        </type-int>
      </field>
      <field name="__cpu" ref="0x104664270" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10441b500"/></typename>
        </type-int>
      </field>
      <field name="__err" ref="0x104664320" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10441bc50"/></typename>
        </type-int>
      </field>
      <field name="__faultvaddr" ref="0x1046643d0" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
    </struct>
    <nx_struct name="AverageMessage" loc="11:TemperatureMonitor.h" ref="0x104c50380" defined="" size="I:6" alignment="I:1">
      <field name="idRequest" ref="0x104c50a50" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x1045cd740"/></typename>
        </type-int>
      </field>
      <field name="average" ref="0x104c50b00" bit-offset="I:16" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
          <typename><typedef-ref name="nx_uint32_t" ref="0x1045cde60"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="90:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x10506c690" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="77:/usr/include/runetype.h" ref="0x10482fbe0" defined="" size="I:3208" alignment="I:8">
      <field name="__magic" ref="0x10482fdf0" bit-offset="I:0" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__encoding" ref="0x10482fea0" bit-offset="I:64" size="I:32">
        <type-array elements="I:32" size="I:32" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__sgetrune" ref="0x10482ff50" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4">
              <typename><typedef-ref name="__darwin_rune_t" ref="0x104420910"/></typename>
            </type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-int cname="char" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
              </type-pointer>
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="__darwin_size_t" ref="0x10441fbf0"/></typename>
              </type-int>
              <type-pointer size="I:8" alignment="I:8">
                <type-pointer size="I:8" alignment="I:8">
                  <type-qualified const="">
                    <type-int cname="char" size="I:1" alignment="I:1"></type-int>
                  </type-qualified>
                </type-pointer>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="__sputrune" ref="0x10482e070" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <function-parameters>
              <type-int cname="int" size="I:4" alignment="I:4">
                <typename><typedef-ref name="__darwin_rune_t" ref="0x104420910"/></typename>
              </type-int>
              <type-pointer size="I:8" alignment="I:8">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-pointer>
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="__darwin_size_t" ref="0x10441fbf0"/></typename>
              </type-int>
              <type-pointer size="I:8" alignment="I:8">
                <type-pointer size="I:8" alignment="I:8">
                  <type-int cname="char" size="I:1" alignment="I:1"></type-int>
                </type-pointer>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="__invalid_rune" ref="0x10482e170" bit-offset="I:448" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_rune_t" ref="0x104420910"/></typename>
        </type-int>
      </field>
      <field name="__runetype" ref="0x10482e220" bit-offset="I:480" size="I:1024">
        <type-array elements="I:256" size="I:1024" alignment="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__uint32_t" ref="0x10441bc50"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="__maplower" ref="0x10482e2d0" bit-offset="I:8672" size="I:1024">
        <type-array elements="I:256" size="I:1024" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__darwin_rune_t" ref="0x104420910"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="__mapupper" ref="0x10482e380" bit-offset="I:16864" size="I:1024">
        <type-array elements="I:256" size="I:1024" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__darwin_rune_t" ref="0x104420910"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="__runetype_ext" ref="0x10482e430" bit-offset="I:25088" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x104823290"/>
          <typename><typedef-ref name="_RuneRange" ref="0x1048236b0"/></typename>
        </type-tag>
      </field>
      <field name="__maplower_ext" ref="0x10482e4e0" bit-offset="I:25216" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x104823290"/>
          <typename><typedef-ref name="_RuneRange" ref="0x1048236b0"/></typename>
        </type-tag>
      </field>
      <field name="__mapupper_ext" ref="0x10482e590" bit-offset="I:25344" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x104823290"/>
          <typename><typedef-ref name="_RuneRange" ref="0x1048236b0"/></typename>
        </type-tag>
      </field>
      <field name="__variable" ref="0x10482e640" bit-offset="I:25472" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__variable_len" ref="0x10482e6f0" bit-offset="I:25536" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ncharclasses" ref="0x10482e8a0" bit-offset="I:25568" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__charclasses" ref="0x10482e950" bit-offset="I:25600" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:20" alignment="I:4"><struct-ref ref="0x104823e80"/>
            <typename><typedef-ref name="_RuneCharClass" ref="0x1048342f0"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct name="tm" loc="75:/usr/include/time.h" ref="0x1049f3380" defined="" size="I:56" alignment="I:8">
      <field name="tm_sec" ref="0x1049f1760" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_min" ref="0x1049f1810" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_hour" ref="0x1049f18c0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mday" ref="0x1049f1970" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mon" ref="0x1049f1a20" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_year" ref="0x1049f1ad0" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_wday" ref="0x1049f1b80" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_yday" ref="0x1049f1c30" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_isdst" ref="0x1049f1ce0" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_gmtoff" ref="0x1049f1d90" bit-offset="I:320" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="tm_zone" ref="0x1049f1e40" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </struct>
    <struct name="_opaque_pthread_attr_t" loc="64:/usr/include/sys/_types.h" ref="0x1044244b0" defined="" size="I:64" alignment="I:8">
      <field name="__sig" ref="0x104424cc0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x104424d70" bit-offset="I:64" size="I:56">
        <type-array elements="I:56" size="I:56" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="sim_log_output" loc="51:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_log.c" ref="0x10491ab00" defined="" size="I:16" alignment="I:8">
      <field name="num" ref="0x1049191b0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="files" ref="0x104919260" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x104870300"/>
              <typename><typedef-ref name="FILE" ref="0x10487c2e0"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <enum loc="94:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/serial/Serial.h" ref="0x104bf3e50" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="51:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/TinyError.h" ref="0x1049e44a0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="54:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/platforms/micaz/sim/platform_hardware.h" ref="0x104db4020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="radio_stats" loc="109:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/serial/Serial.h" ref="0x104bf0360" defined="" size="I:18" alignment="I:2">
      <field name="version" ref="0x104befd80" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="flags" ref="0x104befe30" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x104befee0" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="platform" ref="0x104bec020" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="MTU" ref="0x104bec0d0" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x104440ba0"/></typename>
        </type-int>
      </field>
      <field name="radio_crc_fail" ref="0x104bec180" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x104440ba0"/></typename>
        </type-int>
      </field>
      <field name="radio_queue_drops" ref="0x104bec230" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x104440ba0"/></typename>
        </type-int>
      </field>
      <field name="serial_crc_fail" ref="0x104bec2e0" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x104440ba0"/></typename>
        </type-int>
      </field>
      <field name="serial_tx_fail" ref="0x104bec390" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x104440ba0"/></typename>
        </type-int>
      </field>
      <field name="serial_short_packets" ref="0x104bec440" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x104440ba0"/></typename>
        </type-int>
      </field>
      <field name="serial_proto_drops" ref="0x104bec4f0" bit-offset="I:128" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x104440ba0"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="one_nok" loc="14:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x104395670" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x1043959e0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <attribute name="dmemset" loc="15:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x104396080" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x104396550" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x104396600" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x1043966b0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="__darwin_mcontext_avx32" loc="46:/usr/include/i386/_mcontext.h" ref="0x10466b440" defined="" size="I:792" alignment="I:4">
      <field name="__es" ref="0x10466bf10" bit-offset="I:0" size="I:12">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="__darwin_i386_exception_state" ref="0x10463b480"/></type-tag>
      </field>
      <field name="__ss" ref="0x10466a020" bit-offset="I:96" size="I:64">
        <type-tag size="I:64" alignment="I:4"><struct-ref name="__darwin_i386_thread_state" ref="0x104618af0"/></type-tag>
      </field>
      <field name="__fs" ref="0x10466a0d0" bit-offset="I:608" size="I:716">
        <type-tag size="I:716" alignment="I:4"><struct-ref name="__darwin_i386_avx_state" ref="0x104633390"/></type-tag>
      </field>
    </struct>
    <struct name="__sbuf" loc="86:/usr/include/stdio.h" ref="0x104871760" defined="" size="I:16" alignment="I:8">
      <field name="_base" ref="0x104871d10" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_size" ref="0x104871dc0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="atleastonce" loc="98:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/tos.h" ref="0x104911aa0" defined="" size="I:0" alignment="I:1">
    </attribute>
    <struct loc="153:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x10505f020" defined="" size="I:1" alignment="I:1">
      <field name="tov0" ref="0x10505f230" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="ocf0" ref="0x10505f2e0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="tov1" ref="0x10505f390" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="ocf1b" ref="0x10505f440" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="ocf1a" ref="0x10505f4f0" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="icf1" ref="0x10505f5a0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="tov2" ref="0x10505f650" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="ocf2" ref="0x10505f700" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="231:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x105084020" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x105084230" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x1050842e0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x105086820"/></type-tag>
      </field>
    </union>
    <enum loc="185:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x10508e2b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="250:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x105082520" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x105082730" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x1050827e0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x105083db0"/></type-tag>
      </field>
    </union>
    <struct name="itimerval" loc="86:/usr/include/sys/time.h" ref="0x1049f7b10" defined="" size="I:32" alignment="I:8">
      <field name="it_interval" ref="0x1049f6260" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x1046804d0"/></type-tag>
      </field>
      <field name="it_value" ref="0x1049f6310" bit-offset="I:128" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x1046804d0"/></type-tag>
      </field>
    </struct>
    <struct name="__sFILEX" ref="0x104870020" size="V:" alignment="V:">
    </struct>
    <enum loc="76:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/tos.h" ref="0x1048e5ae0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="136:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x1050637a0" defined="" size="I:1" alignment="I:1">
      <field name="toie0" ref="0x1050639b0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="ocie0" ref="0x105063a60" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="toie1" ref="0x105063b10" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="ocie1b" ref="0x105063bc0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="ocie1a" ref="0x105063c70" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="ticie1" ref="0x105063d20" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="toie2" ref="0x105063dd0" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="ocie2" ref="0x105063e80" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__sigaction" loc="273:/usr/include/sys/signal.h" ref="0x10467c020" defined="" size="I:24" alignment="I:8">
      <field name="__sigaction_u" ref="0x10467bab0" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:8"><union-ref name="__sigaction_u" ref="0x1046745e0"/></type-tag>
      </field>
      <field name="sa_tramp" ref="0x10467bb60" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:104" alignment="I:8"><struct-ref name="__siginfo" ref="0x1046773f0"/>
                  <typename><typedef-ref name="siginfo_t" ref="0x104674180"/></typename>
                </type-tag>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="sa_mask" ref="0x10467bc70" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="sigset_t" ref="0x10466fa60"/></typename>
        </type-int>
      </field>
      <field name="sa_flags" ref="0x10467bd20" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="count_nok" loc="12:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x1043942d0" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x104394610" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="__darwin_mmst_reg" loc="191:/usr/include/mach/i386/_structs.h" ref="0x104622da0" defined="" size="I:16" alignment="I:1">
      <field name="__mmst_reg" ref="0x10462a5a0" bit-offset="I:0" size="I:10">
        <type-array elements="I:10" size="I:10" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__mmst_rsrv" ref="0x10462a650" bit-offset="I:80" size="I:6">
        <type-array elements="I:6" size="I:6" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="sigevent" loc="165:/usr/include/sys/signal.h" ref="0x10466eb80" defined="" size="I:32" alignment="I:8">
      <field name="sigev_notify" ref="0x104678e80" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="sigev_signo" ref="0x104678f30" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="sigev_value" ref="0x104677020" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:8"><union-ref name="sigval" ref="0x10466e2f0"/></type-tag>
      </field>
      <field name="sigev_notify_function" ref="0x1046770d0" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-tag size="I:8" alignment="I:8"><union-ref name="sigval" ref="0x10466e2f0"/></type-tag>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="sigev_notify_attributes" ref="0x1046771a0" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:64" alignment="I:8"><struct-ref name="_opaque_pthread_attr_t" ref="0x1044244b0"/>
            <typename><typedef-ref name="pthread_attr_t" ref="0x10466f610"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct name="rusage_info_v1" loc="206:/usr/include/sys/resource.h" ref="0x104690a00" defined="" size="I:144" alignment="I:8">
      <field name="ri_uuid" ref="0x10468c5f0" bit-offset="I:0" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="ri_user_time" ref="0x10468c6a0" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_system_time" ref="0x10468c750" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_pkg_idle_wkups" ref="0x10468c800" bit-offset="I:256" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_interrupt_wkups" ref="0x10468c8b0" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_pageins" ref="0x10468c960" bit-offset="I:384" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_wired_size" ref="0x10468ca10" bit-offset="I:448" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_resident_size" ref="0x10468cac0" bit-offset="I:512" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_phys_footprint" ref="0x10468cb70" bit-offset="I:576" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_proc_start_abstime" ref="0x10468cc20" bit-offset="I:640" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_proc_exit_abstime" ref="0x10468ccd0" bit-offset="I:704" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_child_user_time" ref="0x10468cd80" bit-offset="I:768" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_child_system_time" ref="0x10468ce30" bit-offset="I:832" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_child_pkg_idle_wkups" ref="0x104697020" bit-offset="I:896" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_child_interrupt_wkups" ref="0x1046970d0" bit-offset="I:960" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_child_pageins" ref="0x104697180" bit-offset="I:1024" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
      <field name="ri_child_elapsed_abstime" ref="0x104697230" bit-offset="I:1088" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="315:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x1050a83b0" defined="" size="I:1" alignment="I:1">
      <field name="ocf1c" ref="0x1050a85c0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="ocf3c" ref="0x1050a8670" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="tov3" ref="0x1050a8720" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="ocf3b" ref="0x1050a87d0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="ocf3a" ref="0x1050a8880" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="icf3" ref="0x1050a8930" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x1050a89e0" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="clockinfo" loc="167:/usr/include/sys/time.h" ref="0x1049f6ed0" defined="" size="I:20" alignment="I:4">
      <field name="hz" ref="0x1049f4890" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tick" ref="0x1049f4940" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tickadj" ref="0x1049f49f0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="stathz" ref="0x1049f4aa0" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="profhz" ref="0x1049f4b50" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="one" loc="13:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x104394c30" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x104395020" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum loc="126:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h" ref="0x104dba480" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="234:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x105086820" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0x105086a30" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="wgm32" ref="0x105086ae0" bit-offset="I:3" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x105086b90" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="ices1" ref="0x105086c40" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="icnc1" ref="0x105086cf0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="63:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x105070490" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="spontaneous"  loc="NONE" ref="0x10438a080" size="V:" alignment="V:">
    </attribute>
    <struct name="__darwin_x86_debug_state64" loc="771:/usr/include/mach/i386/_structs.h" ref="0x1046646b0" defined="" size="I:64" alignment="I:8">
      <field name="__dr0" ref="0x104663ca0" bit-offset="I:0" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__dr1" ref="0x104663d50" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__dr2" ref="0x104663e00" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__dr3" ref="0x104663eb0" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__dr4" ref="0x10466d020" bit-offset="I:256" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__dr5" ref="0x10466d0d0" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__dr6" ref="0x10466d180" bit-offset="I:384" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__dr7" ref="0x10466d230" bit-offset="I:448" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__darwin_fp_control" loc="89:/usr/include/mach/i386/_structs.h" ref="0x10461e7f0" defined="" size="I:2" alignment="I:2">
      <field name="__invalid" ref="0x10461de90" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__denorm" ref="0x10461df40" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__zdiv" ref="0x104626020" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__ovrfl" ref="0x1046260d0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__undfl" ref="0x104626180" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__precis" ref="0x104626230" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__pc" ref="0x104626380" bit-offset="I:8" bit-size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__rc" ref="0x104626430" bit-offset="I:10" bit-size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
    </struct>
    <attribute name="unsafe"  loc="NONE" ref="0x10438c020" size="V:" alignment="V:">
    </attribute>
    <enum loc="51:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h" ref="0x104d9e800" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__darwin_x86_thread_state64" loc="454:/usr/include/mach/i386/_structs.h" ref="0x104643cb0" defined="" size="I:168" alignment="I:8">
      <field name="__rax" ref="0x104649800" bit-offset="I:0" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__rbx" ref="0x1046498b0" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__rcx" ref="0x104649960" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__rdx" ref="0x104649a10" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__rdi" ref="0x104649ac0" bit-offset="I:256" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__rsi" ref="0x104649b70" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__rbp" ref="0x104649c20" bit-offset="I:384" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__rsp" ref="0x104649cd0" bit-offset="I:448" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__r8" ref="0x104649d80" bit-offset="I:512" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__r9" ref="0x104649e30" bit-offset="I:576" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__r10" ref="0x104649ee0" bit-offset="I:640" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__r11" ref="0x104648020" bit-offset="I:704" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__r12" ref="0x1046480d0" bit-offset="I:768" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__r13" ref="0x104648280" bit-offset="I:832" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__r14" ref="0x104648330" bit-offset="I:896" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__r15" ref="0x1046483e0" bit-offset="I:960" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__rip" ref="0x104648490" bit-offset="I:1024" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__rflags" ref="0x104648540" bit-offset="I:1088" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__cs" ref="0x1046485f0" bit-offset="I:1152" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__fs" ref="0x1046486a0" bit-offset="I:1216" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
      <field name="__gs" ref="0x104648750" bit-offset="I:1280" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__darwin_x86_avx_state64" loc="560:/usr/include/mach/i386/_structs.h" ref="0x10464f920" defined="" size="I:844" alignment="I:4">
      <field name="__fpu_reserved" ref="0x1046625b0" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
      <field name="__fpu_fcw" ref="0x104662660" bit-offset="I:64" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_control" ref="0x10461e7f0"/></type-tag>
      </field>
      <field name="__fpu_fsw" ref="0x104662710" bit-offset="I:80" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_status" ref="0x104626d40"/></type-tag>
      </field>
      <field name="__fpu_ftw" ref="0x1046627c0" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10439fd50"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv1" ref="0x104662870" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10439fd50"/></typename>
        </type-int>
      </field>
      <field name="__fpu_fop" ref="0x104662920" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10441b500"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ip" ref="0x1046629d0" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10441bc50"/></typename>
        </type-int>
      </field>
      <field name="__fpu_cs" ref="0x104662a80" bit-offset="I:160" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10441b500"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv2" ref="0x104662b30" bit-offset="I:176" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10441b500"/></typename>
        </type-int>
      </field>
      <field name="__fpu_dp" ref="0x104662be0" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10441bc50"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ds" ref="0x104662c90" bit-offset="I:224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10441b500"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv3" ref="0x104662d40" bit-offset="I:240" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10441b500"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsr" ref="0x104662df0" bit-offset="I:256" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10441bc50"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsrmask" ref="0x104661020" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10441bc50"/></typename>
        </type-int>
      </field>
      <field name="__fpu_stmm0" ref="0x1046610d0" bit-offset="I:320" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm1" ref="0x104661180" bit-offset="I:448" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm2" ref="0x104661230" bit-offset="I:576" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm3" ref="0x1046612e0" bit-offset="I:704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm4" ref="0x104661390" bit-offset="I:832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm5" ref="0x104661440" bit-offset="I:960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm6" ref="0x1046614f0" bit-offset="I:1088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm7" ref="0x1046615a0" bit-offset="I:1216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_xmm0" ref="0x104661650" bit-offset="I:1344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm1" ref="0x104661700" bit-offset="I:1472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm2" ref="0x1046617b0" bit-offset="I:1600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm3" ref="0x104661a60" bit-offset="I:1728" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm4" ref="0x104661b10" bit-offset="I:1856" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm5" ref="0x104661bc0" bit-offset="I:1984" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm6" ref="0x104661c70" bit-offset="I:2112" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm7" ref="0x104661d20" bit-offset="I:2240" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm8" ref="0x104661dd0" bit-offset="I:2368" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm9" ref="0x104661e80" bit-offset="I:2496" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm10" ref="0x104661f30" bit-offset="I:2624" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm11" ref="0x10465e020" bit-offset="I:2752" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm12" ref="0x10465e0d0" bit-offset="I:2880" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm13" ref="0x10465e180" bit-offset="I:3008" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm14" ref="0x10465e230" bit-offset="I:3136" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm15" ref="0x10465e2e0" bit-offset="I:3264" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_rsrv4" ref="0x10465e390" bit-offset="I:3392" size="I:96">
        <type-array elements="I:96" size="I:96" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_reserved1" ref="0x10465e440" bit-offset="I:4160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__avx_reserved1" ref="0x10465e4f0" bit-offset="I:4192" size="I:64">
        <type-array elements="I:64" size="I:64" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_ymmh0" ref="0x10465e5a0" bit-offset="I:4704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_ymmh1" ref="0x10465e650" bit-offset="I:4832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_ymmh2" ref="0x10465e700" bit-offset="I:4960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_ymmh3" ref="0x10465e7b0" bit-offset="I:5088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_ymmh4" ref="0x10465e860" bit-offset="I:5216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_ymmh5" ref="0x10465e910" bit-offset="I:5344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_ymmh6" ref="0x10465e9c0" bit-offset="I:5472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_ymmh7" ref="0x10465ea70" bit-offset="I:5600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_ymmh8" ref="0x10465ef20" bit-offset="I:5728" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_ymmh9" ref="0x104665020" bit-offset="I:5856" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_ymmh10" ref="0x1046650d0" bit-offset="I:5984" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_ymmh11" ref="0x104665180" bit-offset="I:6112" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_ymmh12" ref="0x104665230" bit-offset="I:6240" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_ymmh13" ref="0x1046652e0" bit-offset="I:6368" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_ymmh14" ref="0x104665390" bit-offset="I:6496" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_ymmh15" ref="0x104665440" bit-offset="I:6624" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
    </struct>
    <struct name="rusage" loc="151:/usr/include/sys/resource.h" ref="0x10468a3f0" defined="" size="I:144" alignment="I:8">
      <field name="ru_utime" ref="0x104688260" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x1046804d0"/></type-tag>
      </field>
      <field name="ru_stime" ref="0x104688310" bit-offset="I:128" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x1046804d0"/></type-tag>
      </field>
      <field name="ru_maxrss" ref="0x1046883c0" bit-offset="I:256" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_ixrss" ref="0x104688470" bit-offset="I:320" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_idrss" ref="0x104688520" bit-offset="I:384" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_isrss" ref="0x1046885d0" bit-offset="I:448" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_minflt" ref="0x104688680" bit-offset="I:512" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_majflt" ref="0x104688730" bit-offset="I:576" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_nswap" ref="0x1046887e0" bit-offset="I:640" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_inblock" ref="0x104688890" bit-offset="I:704" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_oublock" ref="0x104688940" bit-offset="I:768" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_msgsnd" ref="0x1046889f0" bit-offset="I:832" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_msgrcv" ref="0x104688aa0" bit-offset="I:896" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_nsignals" ref="0x104688c50" bit-offset="I:960" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_nvcsw" ref="0x104688d00" bit-offset="I:1024" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_nivcsw" ref="0x104688db0" bit-offset="I:1088" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <struct name="rlimit" loc="290:/usr/include/sys/resource.h" ref="0x104692550" defined="" size="I:16" alignment="I:8">
      <field name="rlim_cur" ref="0x104692b40" bit-offset="I:0" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="rlim_t" ref="0x10468a020"/></typename>
        </type-int>
      </field>
      <field name="rlim_max" ref="0x104692bf0" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="rlim_t" ref="0x10468a020"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__darwin_i386_exception_state" loc="402:/usr/include/mach/i386/_structs.h" ref="0x10463b480" defined="" size="I:12" alignment="I:4">
      <field name="__trapno" ref="0x10463bed0" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10441b500"/></typename>
        </type-int>
      </field>
      <field name="__cpu" ref="0x104644020" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10441b500"/></typename>
        </type-int>
      </field>
      <field name="__err" ref="0x1046440d0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10441bc50"/></typename>
        </type-int>
      </field>
      <field name="__faultvaddr" ref="0x104644180" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10441bc50"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="nts" loc="17:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x104397980" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x104397cf0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="exception" loc="740:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include-fixed/math.h" ref="0x104828ca0" defined="" size="I:40" alignment="I:8">
      <field name="type" ref="0x1048276a0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="name" ref="0x104827750" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="arg1" ref="0x104827800" bit-offset="I:128" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="arg2" ref="0x1048278b0" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="retval" ref="0x104827960" bit-offset="I:256" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <union loc="133:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x105062170" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x105062380" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x105062430" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x1050637a0"/></type-tag>
      </field>
    </union>
    <struct name="__darwin_xmm_reg" loc="210:/usr/include/mach/i386/_structs.h" ref="0x10462a8f0" defined="" size="I:16" alignment="I:1">
      <field name="__xmm_reg" ref="0x10462ade0" bit-offset="I:0" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="sim_log_channel" loc="56:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_log.c" ref="0x104919730" defined="" size="I:24" alignment="I:8">
      <field name="name" ref="0x1049171b0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="numOutputs" ref="0x104917260" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x104917310" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="outputs" ref="0x1049173c0" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x104870300"/>
              <typename><typedef-ref name="FILE" ref="0x10487c2e0"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <struct name="__darwin_pthread_handler_rec" loc="58:/usr/include/sys/_types.h" ref="0x104423200" defined="" size="I:24" alignment="I:8">
      <field name="__routine" ref="0x1044240a0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="__arg" ref="0x104424170" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__next" ref="0x104424220" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="__darwin_pthread_handler_rec" ref="0x104423200"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="104:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h" ref="0x104dbd870" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="C"  loc="NONE" ref="0x1043897d0" size="V:" alignment="V:">
    </attribute>
    <struct name="sim_noise_hash_t" loc="64:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_noise.h" ref="0x104a30790" defined="" size="I:488" alignment="I:8">
      <field name="key" ref="0x104a2f6e0" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="numElements" ref="0x104a2f790" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x104a2f840" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="elements" ref="0x104a2f8f0" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="flag" ref="0x104a2f9a0" bit-offset="I:320" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="dist" ref="0x104a2fa50" bit-offset="I:352" size="I:444">
        <type-array elements="I:111" size="I:444" alignment="I:4">
          <type-float cname="float" size="I:4" alignment="I:4"></type-float>
        </type-array>
      </field>
    </struct>
    <enum loc="14:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/AM.h" ref="0x104bf8270" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="macro"  loc="NONE" ref="0x10438a6b0" size="V:" alignment="V:">
      <field name="macro_name" ref="0x10438a8c0" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <struct name="_opaque_pthread_rwlock_t" loc="70:/usr/include/sys/_types.h" ref="0x104429080" defined="" size="I:200" alignment="I:8">
      <field name="__sig" ref="0x104429690" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x104429740" bit-offset="I:64" size="I:192">
        <type-array elements="I:192" size="I:192" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <union name="sigval" loc="155:/usr/include/sys/signal.h" ref="0x10466e2f0" defined="" size="I:8" alignment="I:8">
      <field name="sival_int" ref="0x10466e8c0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="sival_ptr" ref="0x10466e970" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </union>
    <struct loc="101:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x10506a6a0" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0x10506a8b0" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="wgm1" ref="0x10506a960" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="com" ref="0x10506aa10" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="wgm0" ref="0x10506aac0" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="foc" ref="0x10506ab70" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
    </struct>
    <nx_struct name="message_t" loc="14:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/message.h" ref="0x104c08750" defined="" size="I:41" alignment="I:1">
      <field name="header" ref="0x104c07a10" bit-offset="I:0" size="I:7">
        <type-array elements="I:7" size="I:7" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x1045cd020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="data" ref="0x104c07ac0" bit-offset="I:56" size="I:28">
        <type-array elements="I:28" size="I:28" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x1045cd020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="footer" ref="0x104c07b70" bit-offset="I:280" size="I:2">
        <type-array elements="I:2" size="I:2" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x1045cd020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="metadata" ref="0x104c07c20" bit-offset="I:296" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x1045cd020"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <struct name="_opaque_pthread_condattr_t" loc="66:/usr/include/sys/_types.h" ref="0x1044259a0" defined="" size="I:16" alignment="I:8">
      <field name="__sig" ref="0x104426020" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x1044260d0" bit-offset="I:64" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="_opaque_pthread_mutex_t" loc="67:/usr/include/sys/_types.h" ref="0x104426370" defined="" size="I:64" alignment="I:8">
      <field name="__sig" ref="0x104426980" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x104426a30" bit-offset="I:64" size="I:56">
        <type-array elements="I:56" size="I:56" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <nx_struct name="tossim_header" loc="6:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimRadioMsg.h" ref="0x104bf63c0" defined="" size="I:7" alignment="I:1">
      <field name="dest" ref="0x104bf50a0" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x104bd8430"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x104bf5150" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x104bd8430"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x104bf5200" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x1045cd020"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x104bf52b0" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x104bd8020"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x104bf5360" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x104bd9aa0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="144:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h" ref="0x104db82f0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="300:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x105079e70" defined="" size="I:1" alignment="I:1">
      <field name="ocie1c" ref="0x1050ab0a0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="ocie3c" ref="0x1050ab150" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="toie3" ref="0x1050ab200" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="ocie3b" ref="0x1050ab2b0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="ocie3a" ref="0x1050ab360" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="ticie3" ref="0x1050ab410" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x1050ab4c0" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="98:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x10506ae50" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x1050690a0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x105069150" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10506a6a0"/></type-tag>
      </field>
    </union>
    <struct name="__darwin_i386_float_state" loc="232:/usr/include/mach/i386/_structs.h" ref="0x1046291e0" defined="" size="I:524" alignment="I:4">
      <field name="__fpu_reserved" ref="0x10462d760" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
      <field name="__fpu_fcw" ref="0x10462d810" bit-offset="I:64" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_control" ref="0x10461e7f0"/></type-tag>
      </field>
      <field name="__fpu_fsw" ref="0x10462d8c0" bit-offset="I:80" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_status" ref="0x104626d40"/></type-tag>
      </field>
      <field name="__fpu_ftw" ref="0x10462d970" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10439fd50"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv1" ref="0x10462da20" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10439fd50"/></typename>
        </type-int>
      </field>
      <field name="__fpu_fop" ref="0x10462dad0" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10441b500"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ip" ref="0x10462db80" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10441bc50"/></typename>
        </type-int>
      </field>
      <field name="__fpu_cs" ref="0x10462dc30" bit-offset="I:160" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10441b500"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv2" ref="0x10462dce0" bit-offset="I:176" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10441b500"/></typename>
        </type-int>
      </field>
      <field name="__fpu_dp" ref="0x10462dd90" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10441bc50"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ds" ref="0x10462de40" bit-offset="I:224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10441b500"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv3" ref="0x10462def0" bit-offset="I:240" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10441b500"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsr" ref="0x104635020" bit-offset="I:256" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10441bc50"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsrmask" ref="0x1046351d0" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10441bc50"/></typename>
        </type-int>
      </field>
      <field name="__fpu_stmm0" ref="0x104635280" bit-offset="I:320" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm1" ref="0x104635330" bit-offset="I:448" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm2" ref="0x1046353e0" bit-offset="I:576" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm3" ref="0x104635490" bit-offset="I:704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm4" ref="0x104635540" bit-offset="I:832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm5" ref="0x1046355f0" bit-offset="I:960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm6" ref="0x1046356a0" bit-offset="I:1088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_stmm7" ref="0x104635750" bit-offset="I:1216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x104622da0"/></type-tag>
      </field>
      <field name="__fpu_xmm0" ref="0x104635800" bit-offset="I:1344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm1" ref="0x1046358b0" bit-offset="I:1472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm2" ref="0x104635960" bit-offset="I:1600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm3" ref="0x104635c10" bit-offset="I:1728" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm4" ref="0x104635cc0" bit-offset="I:1856" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm5" ref="0x104635d70" bit-offset="I:1984" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm6" ref="0x104635e20" bit-offset="I:2112" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_xmm7" ref="0x104635ed0" bit-offset="I:2240" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10462a8f0"/></type-tag>
      </field>
      <field name="__fpu_rsrv4" ref="0x104633020" bit-offset="I:2368" size="I:224">
        <type-array elements="I:224" size="I:224" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_reserved1" ref="0x1046330d0" bit-offset="I:4160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="sim_noise_node_t" loc="73:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_noise.h" ref="0x104a2d020" defined="" size="I:80" alignment="I:8">
      <field name="key" ref="0x104a2c7f0" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="freqKey" ref="0x104a2c8a0" bit-offset="I:160" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="lastNoiseVal" ref="0x104a2c950" bit-offset="I:320" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="noiseGenTime" ref="0x104a2ca00" bit-offset="I:352" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
        </type-int>
      </field>
      <field name="noiseTable" ref="0x104a2cab0" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x104910cb0"/></type-tag>
        </type-pointer>
      </field>
      <field name="noiseTrace" ref="0x104a2cb60" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="noiseTraceLen" ref="0x104a2cc10" bit-offset="I:512" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
        </type-int>
      </field>
      <field name="noiseTraceIndex" ref="0x104a2ccc0" bit-offset="I:544" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
        </type-int>
      </field>
      <field name="generated" ref="0x104a2cd70" bit-offset="I:576" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="211:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x10508ba00" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="_opaque_pthread_mutexattr_t" loc="68:/usr/include/sys/_types.h" ref="0x104426cf0" defined="" size="I:16" alignment="I:8">
      <field name="__sig" ref="0x104428360" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x104428410" bit-offset="I:64" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <enum loc="87:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/serial/Serial.h" ref="0x104bf34a0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="AverageRequestMessage" loc="16:TemperatureMonitor.h" ref="0x104c4f080" defined="" size="I:4" alignment="I:1">
      <field name="idNode" ref="0x104c4f790" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x1045cd740"/></typename>
        </type-int>
      </field>
      <field name="idRequest" ref="0x104c4f840" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x1045cd740"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="126:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128hardware.h" ref="0x104da1d00" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="43:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h" ref="0x104d9f6e0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__sFILE" loc="120:/usr/include/stdio.h" ref="0x104870300" defined="" size="I:152" alignment="I:8">
      <field name="_p" ref="0x10487e230" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_r" ref="0x10487e2e0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_w" ref="0x10487e390" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_flags" ref="0x10487e440" bit-offset="I:128" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="_file" ref="0x10487e4f0" bit-offset="I:144" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="_bf" ref="0x10487e5a0" bit-offset="I:192" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__sbuf" ref="0x104871760"/></type-tag>
      </field>
      <field name="_lbfsize" ref="0x10487e650" bit-offset="I:320" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_cookie" ref="0x10487e700" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="_close" ref="0x10487e7b0" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="_read" ref="0x10487e880" bit-offset="I:512" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-pointer>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="_seek" ref="0x10487e970" bit-offset="I:576" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="fpos_t" ref="0x104871450"/></typename>
            </type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
              <type-int cname="long long" size="I:8" alignment="I:8">
                <typename><typedef-ref name="fpos_t" ref="0x104871450"/></typename>
              </type-int>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="_write" ref="0x10487ea60" bit-offset="I:640" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-int cname="char" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
              </type-pointer>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="_ub" ref="0x10487eb50" bit-offset="I:704" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__sbuf" ref="0x104871760"/></type-tag>
      </field>
      <field name="_extra" ref="0x10487ed00" bit-offset="I:832" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="V:" alignment="V:"><struct-ref name="__sFILEX" ref="0x104870020"/></type-tag>
        </type-pointer>
      </field>
      <field name="_ur" ref="0x10487edb0" bit-offset="I:896" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_ubuf" ref="0x10487ee60" bit-offset="I:928" size="I:3">
        <type-array elements="I:3" size="I:3" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_nbuf" ref="0x10487ef10" bit-offset="I:952" size="I:1">
        <type-array elements="I:1" size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_lb" ref="0x10487c020" bit-offset="I:960" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__sbuf" ref="0x104871760"/></type-tag>
      </field>
      <field name="_blksize" ref="0x10487c0d0" bit-offset="I:1088" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_offset" ref="0x10487c180" bit-offset="I:1152" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="fpos_t" ref="0x104871450"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="312:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h" ref="0x1050a8c80" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x1050a8e90" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x1050a8f40" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x1050a83b0"/></type-tag>
      </field>
    </union>
    <struct loc="199:/usr/include/sys/wait.h" ref="0x1046ae840" defined="" size="I:4" alignment="I:4">
      <field name="w_Termsig" ref="0x1046aea50" bit-offset="I:0" bit-size="I:7">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_Coredump" ref="0x1046aeb00" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_Retcode" ref="0x1046aebb0" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_Filler" ref="0x1046aec60" bit-offset="I:16" bit-size="I:16">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="atomic_hwevent"  loc="NONE" ref="0x104389d50" size="V:" alignment="V:">
    </attribute>
    <enum loc="79:/usr/include/sys/wait.h" ref="0x10461be00" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="dmemcpy" loc="16:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x104396d00" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x104397200" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x1043972b0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x104397360" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum loc="61:TemperatureMonitorC.nc" ref="0x104cf15c0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TemperatureMonitorC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="53:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimSchedulerBasicP.nc" ref="0x104c3b240" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="74:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/AlarmToTimerC.nc" ref="0x105230210" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="71:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/VirtualizeTimerC.nc" ref="0x1052706b0" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="44:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" ref="0x1050f9a50" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="59:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/VirtualizeTimerC.nc" ref="0x10529dca0" defined="" scoped="" size="I:12" alignment="I:4">
      <component-ref qname="VirtualizeTimerC"/>
      <field name="t0" ref="0x10529deb0" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
        </type-int>
      </field>
      <field name="dt" ref="0x10529c020" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
        </type-int>
      </field>
      <field name="isoneshot" ref="0x10529c0d0" bit-offset="I:64" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
        </type-int>
      </field>
      <field name="isrunning" ref="0x10529c180" bit-offset="I:65" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
        </type-int>
      </field>
      <field name="_reserved" ref="0x10529c230" bit-offset="I:66" bit-size="I:6">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="53:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/VirtualizeTimerC.nc" ref="0x10529e680" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="8:RandomReaderC.nc" ref="0x1052e5790" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="RandomReaderC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="96:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModelC.nc" ref="0x105384590" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="145:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModelC.nc" ref="0x105305210" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="101:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModelC.nc" ref="0x105385350" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="receive_message" loc="66:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/CpmModelC.nc" ref="0x10537d160" defined="" scoped="" size="I:64" alignment="I:8">
      <component-ref qname="CpmModelC"/>
      <field name="source" ref="0x10537bc30" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="start" ref="0x10537bce0" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x1048e39b0"/></typename>
        </type-int>
      </field>
      <field name="end" ref="0x10537bd90" bit-offset="I:128" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x1048e39b0"/></typename>
        </type-int>
      </field>
      <field name="power" ref="0x10537be40" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="reversePower" ref="0x10537bef0" bit-offset="I:256" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="strength" ref="0x10537a020" bit-offset="I:320" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1">
          <typename><typedef-ref name="int8_t" ref="0x10443e8e0"/></typename>
        </type-int>
      </field>
      <field name="lost" ref="0x10537a0d0" bit-offset="I:328" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x10537a180" bit-offset="I:336" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
        </type-int>
      </field>
      <field name="msg" ref="0x10537a230" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
            <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
          </type-tag>
        </type-pointer>
      </field>
      <field name="next" ref="0x10537a2e0" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:64" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x10537d160"/>
            <typename><typedef-ref name="receive_message_t" scoped="" ref="0x10537d5d0"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="126:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMQueueImplP.nc" ref="0x1054c4b50" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="169:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMQueueImplP.nc" ref="0x105489a30" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="47:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMQueueP.nc" ref="0x10548c200" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="55:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMQueueImplP.nc" ref="0x105482110" defined="" scoped="" size="I:8" alignment="I:8">
      <component-ref qname="AMQueueImplP"/>
      <field name="msg" ref="0x105482320" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
            <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
  </tags>
  <variables>
    <variable name="randCM" ref="0x104afb920" loc="39:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="dummy" ref="0x104b937e0" loc="283:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="current_node" ref="0x104a27e40" loc="52:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_tossim.c">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="test" ref="0x104af9370" loc="41:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="channelTable" ref="0x104916aa0" loc="68:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_log.c">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x104910cb0"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="noiseData" ref="0x104b27720" loc="58:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_noise.c">
      <type-array elements="I:1000" size="I:80000" alignment="I:8">
        <type-tag size="I:80" alignment="I:8"><struct-ref name="sim_noise_node_t" ref="0x104a2d020"/>
          <typename><typedef-ref name="sim_noise_node_t" ref="0x104a2b020"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="outputs" ref="0x104916640" loc="67:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_log.c">
      <type-array elements="I:183" size="I:2928" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_log_output" ref="0x10491ab00"/>
          <typename><typedef-ref name="sim_log_output_t" ref="0x1049193c0"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="randU" ref="0x104afb1a0" loc="39:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/randomlib.c">
      <type-array elements="I:97" size="I:776" alignment="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </type-array>
    </variable>
    <variable name="timezone" ref="0x104a09dd0" loc="103:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="eventHeap" ref="0x1049d7020" loc="44:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_event_queue.c">
      <documentation loc="33:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="heap" ref="0x10497c690"/>
        <typename><typedef-ref name="heap_t" ref="0x10497b8e0"/></typename>
      </type-tag>
    </variable>
    <variable name="csmaRxTxDelay" ref="0x104a77e80" loc="54:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase1" ref="0x104b281d0" loc="51:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_noise.c">
      <documentation loc="32:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="__stderrp" ref="0x10487a020" loc="156:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x104870300"/>
          <typename><typedef-ref name="FILE" ref="0x10487c2e0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="randC" ref="0x104afb420" loc="39:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="FreqKeyNum" ref="0x104b270d0" loc="56:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_noise.c">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
      </type-int>
    </variable>
    <variable name="csmaLow" ref="0x104a7aad0" loc="47:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaPreambleLength" ref="0x104a789d0" loc="50:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numTotal" ref="0x104b28ba0" loc="53:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="daylight" ref="0x104a08170" loc="105:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaExponentBase" ref="0x104a77020" loc="51:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="randCD" ref="0x104afb6a0" loc="39:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="getdate_err" ref="0x104a09520" loc="101:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="j97" ref="0x104af9020" loc="40:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="TOS_NODE_ID" ref="0x1048e34a0" loc="78:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/tos.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x104440ba0"/></typename>
      </type-int>
    </variable>
    <variable name="sys_errlist" ref="0x1048cc680" loc="451:/usr/include/stdio.h">
      <type-qualified const="">
        <type-array elements="V:" size="V:" alignment="V:">
          <type-qualified const="">
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </type-qualified>
        </type-array>
      </type-qualified>
    </variable>
    <variable name="_CurrentRuneLocale" ref="0x10483d4b0" loc="112:/usr/include/runetype.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:3208" alignment="I:8"><struct-ref ref="0x10482fbe0"/>
          <typename><typedef-ref name="_RuneLocale" ref="0x10482eab0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="tzname" ref="0x104a09190" loc="98:/usr/include/time.h">
      <type-array elements="V:" size="V:" alignment="V:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="STARTING_SIZE" ref="0x10498cbf0" loc="58:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/heap.c">
      <type-qualified const="">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </variable>
    <variable name="=va_arg" ref="0x104384860"  loc="NONE">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaHigh" ref="0x104a7a660" loc="46:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMaxIterations" ref="0x104a774f0" loc="52:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="atm128RegFile" ref="0x104d8ece0" loc="51:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128hardware.h">
      <documentation loc="32:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-array elements="I:1000" size="I:160000" alignment="I:1">
        <type-array elements="I:160" size="I:160" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
          </type-int>
        </type-array>
      </type-array>
    </variable>
    <variable name="__stdinp" ref="0x10487c6f0" loc="154:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x104870300"/>
          <typename><typedef-ref name="FILE" ref="0x10487c2e0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="localNoise" ref="0x104ab0760" loc="10:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:16016" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_gain_noise" ref="0x104ab1150"/>
          <typename><typedef-ref name="sim_gain_noise_t" ref="0x104ab1930"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="csmaInitLow" ref="0x104a7a1e0" loc="45:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase2" ref="0x104b28720" loc="52:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="suboptarg" ref="0x10473bc00" loc="315:/usr/include/stdlib.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-pointer>
    </variable>
    <variable name="sim_ticks" ref="0x104a27a60" loc="51:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_tossim.c">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x1048e39b0"/></typename>
      </type-int>
    </variable>
    <variable name="connectivity" ref="0x104ab0090" loc="9:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:8008" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x104aa3dd0"/>
            <typename><typedef-ref name="gain_entry_t" ref="0x104aa18f0"/></typename>
          </type-tag>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="sys_nerr" ref="0x1048cc1b0" loc="450:/usr/include/stdio.h">
      <type-qualified const="">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </variable>
    <variable name="simTimeBuf" ref="0x104a5c0d0" loc="183:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_tossim.c">
      <type-array elements="I:128" size="I:128" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="__stdoutp" ref="0x10487cae0" loc="155:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x104870300"/>
          <typename><typedef-ref name="FILE" ref="0x10487c2e0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="sim_seed" ref="0x104a26210" loc="53:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_tossim.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="sensitivity" ref="0x104ab0ab0" loc="11:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_gain.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="signgam" ref="0x10481ca10" loc="689:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include-fixed/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaInitHigh" ref="0x104a7bd20" loc="44:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_DefaultRuneLocale" ref="0x10483d020" loc="111:/usr/include/runetype.h">
      <type-tag size="I:3208" alignment="I:8"><struct-ref ref="0x10482fbe0"/>
        <typename><typedef-ref name="_RuneLocale" ref="0x10482eab0"/></typename>
      </type-tag>
    </variable>
    <variable name="csmaAckTime" ref="0x104a76330" loc="55:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaSymbolsPerSec" ref="0x104a78020" loc="48:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMinFreeSamples" ref="0x104a779d0" loc="53:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="__mb_cur_max" ref="0x1046b7c80" loc="117:/usr/include/stdlib.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaBitsPerSymbol" ref="0x104a784f0" loc="49:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="i97" ref="0x104afbc60" loc="40:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="lastValues" ref="0x104cb2760" loc="18:TemperatureMonitorC.nc">
      <component-ref qname="TemperatureMonitorC"/>
      <type-array elements="I:6" size="I:12" alignment="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x104440ba0"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="ready" ref="0x104ca8020" loc="20:TemperatureMonitorC.nc">
      <component-ref qname="TemperatureMonitorC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
      </type-int>
    </variable>
    <variable name="packet" ref="0x104ca8960" loc="22:TemperatureMonitorC.nc">
      <component-ref qname="TemperatureMonitorC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
        <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
      </type-tag>
    </variable>
    <variable name="busy" ref="0x104ca84a0" loc="21:TemperatureMonitorC.nc">
      <component-ref qname="TemperatureMonitorC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
      </type-int>
    </variable>
    <variable name="request" ref="0x104ca7220" loc="24:TemperatureMonitorC.nc">
      <component-ref qname="TemperatureMonitorC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x104440ba0"/></typename>
      </type-int>
    </variable>
    <variable name="idRequest" ref="0x104ca8d00" loc="23:TemperatureMonitorC.nc">
      <component-ref qname="TemperatureMonitorC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x104440ba0"/></typename>
      </type-int>
    </variable>
    <variable name="readsCount" ref="0x104cb2b00" loc="19:TemperatureMonitorC.nc">
      <component-ref qname="TemperatureMonitorC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
      </type-int>
    </variable>
    <variable name="sim_scheduler_event_pending" ref="0x104c39e60" loc="66:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
      </type-int>
    </variable>
    <variable name="m_tail" ref="0x104c39570" loc="60:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
      </type-int>
    </variable>
    <variable name="m_head" ref="0x104c39200" loc="59:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
      </type-int>
    </variable>
    <variable name="m_next" ref="0x104c39a20" loc="61:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-array elements="I:9" size="I:9" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="sim_scheduler_event" ref="0x104c383e0" loc="67:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x1048ec6d0"/>
        <typename><typedef-ref name="sim_event_t" ref="0x1048ecac0"/></typename>
      </type-tag>
    </variable>
    <variable name="bootEvent" ref="0x104f7f290" loc="53:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x1048ec6d0"/>
          <typename><typedef-ref name="sim_event_t" ref="0x1048ecac0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="startTime" ref="0x104f57b30" loc="51:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="euid" ref="0x104f57770" loc="50:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="isOn" ref="0x104f57e70" loc="52:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
      </type-int>
    </variable>
    <variable name="buffer" ref="0x104fc1390" loc="62:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
        <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
      </type-tag>
    </variable>
    <variable name="bufferPointer" ref="0x104fc17a0" loc="63:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
          <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="seed" ref="0x10503ac30" loc="52:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
      </type-int>
    </variable>
    <variable name="base" ref="0x1050f9800" loc="40:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
      </type-int>
    </variable>
    <variable name="t0" ref="0x1050f91f0" loc="39:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x1050c6e30" loc="38:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
      </type-int>
    </variable>
    <variable name="dt" ref="0x1050f9450" loc="39:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
      </type-int>
    </variable>
    <variable name="oldScale" ref="0x10515d0d0" loc="80:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="76:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
        <short> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero.</short>
        <long> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero. When oldScale is&#10;  AVR_CLOCK_OFF and the scale is set to something else, the&#10;  clock starts ticking. *</long>
      </documentation>
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
      </type-int>
    </variable>
    <variable name="lastZero" ref="0x10515eba0" loc="74:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x1048e39b0"/></typename>
      </type-int>
    </variable>
    <variable name="overflow" ref="0x1051fd6f0" loc="480:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x1048ec6d0"/>
          <typename><typedef-ref name="sim_event_t" ref="0x1048ecac0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="compare" ref="0x105172350" loc="185:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x1048ec6d0"/>
          <typename><typedef-ref name="sim_event_t" ref="0x1048ecac0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="savedCounter" ref="0x1051632e0" loc="58:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
      </type-int>
    </variable>
    <variable name="inOverflow" ref="0x105164dc0" loc="57:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
      </type-int>
    </variable>
    <variable name="m_dt" ref="0x10525f7c0" loc="55:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
      </type-int>
    </variable>
    <variable name="m_oneshot" ref="0x10525fb30" loc="56:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers_changed" ref="0x10529cc30" loc="69:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers" ref="0x10529c870" loc="68:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0x10529dca0"/>
          <typename><typedef-ref name="Timer_t" scoped="" ref="0x10529c390"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="sendEvent" ref="0x1053338c0" loc="78:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x1048ec6d0"/>
        <typename><typedef-ref name="sim_event_t" ref="0x1048ecac0"/></typename>
      </type-tag>
    </variable>
    <variable name="initialized" ref="0x1052fe330" loc="70:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
      </type-int>
    </variable>
    <variable name="error" ref="0x10538f090" loc="294:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
      </type-int>
    </variable>
    <variable name="backoffCount" ref="0x1052fecc0" loc="72:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
      </type-int>
    </variable>
    <variable name="neededFreeSamples" ref="0x1053340d0" loc="73:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
      </type-int>
    </variable>
    <variable name="sending" ref="0x1053344a0" loc="74:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
          <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="running" ref="0x1052fe7d0" loc="71:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
      </type-int>
    </variable>
    <variable name="receiveBuffer" ref="0x105333c90" loc="80:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
        <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
      </type-tag>
    </variable>
    <variable name="sendingLength" ref="0x105333090" loc="76:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
      </type-int>
    </variable>
    <variable name="transmitting" ref="0x105334b10" loc="75:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
      </type-int>
    </variable>
    <variable name="destNode" ref="0x105333510" loc="77:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="collision" ref="0x1053c9020" loc="201:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
      </type-int>
    </variable>
    <variable name="requestAck" ref="0x10537e020" loc="59:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
      </type-int>
    </variable>
    <variable name="receiveEvent" ref="0x1053ca630" loc="198:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x1048ec6d0"/>
        <typename><typedef-ref name="sim_event_t" ref="0x1048ecac0"/></typename>
      </type-tag>
    </variable>
    <variable name="transmissionEndTime" ref="0x10537edb0" loc="62:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x1048e39b0"/></typename>
      </type-int>
    </variable>
    <variable name="incomingSource" ref="0x1053c9b90" loc="203:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="outstandingReceptionHead" ref="0x10537a6d0" loc="79:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:64" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x10537d160"/>
          <typename><typedef-ref name="receive_message_t" scoped="" ref="0x10537d5d0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="incoming" ref="0x1053c9540" loc="202:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
          <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="clearThreshold" ref="0x1053ca9c0" loc="200:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="transmitting" ref="0x10537e860" loc="61:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
      </type-int>
    </variable>
    <variable name="outgoing" ref="0x10537fc70" loc="58:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
          <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="receiving" ref="0x10537e390" loc="60:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
      </type-int>
    </variable>
    <variable name="addr" ref="0x105441710" loc="62:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x104bf8020"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x105441260" loc="61:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
      </type-int>
    </variable>
    <variable name="current" ref="0x105482800" loc="59:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0x105480020" loc="60:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:8">
        <type-tag size="I:8" alignment="I:8"><struct-ref scoped="" ref="0x105482110"/>
          <typename><typedef-ref name="queue_entry_t" scoped="" ref="0x105482480"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="cancelMask" ref="0x1054808b0" loc="61:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
        </type-int>
      </type-array>
    </variable>
  </variables>
  <constants>
    <constant cst="I:3" name="ACIE" ref="0x104d5ac40" loc="1075:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCDR7" ref="0x104d48020" loc="943:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PB6" ref="0x104d81c80" loc="1132:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB81" ref="0x104d5c340" loc="1058:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_ADC_DIFF_ADC22_1x" ref="0x104dc0d20" loc="85:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1BL" ref="0x104d0cc20" loc="140:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_DDRD" ref="0x104d101c0" loc="81:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOIE0" ref="0x104d3a340" loc="786:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PING0" ref="0x104d8e660" loc="1299:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_FREE_RUNNING_OFF" ref="0x104db9260" loc="133:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_WAVE16_PWM_CAPTURE_HIGH" ref="0x105088020" loc="222:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_ADC_DIFF_ADC51_1x" ref="0x104dc1b70" loc="80:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SRL0" ref="0x104d18970" loc="705:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS30" ref="0x104d4bc70" loc="924:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES3" ref="0x104d4cca0" loc="919:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINA2" ref="0x104d81020" loc="1126:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINB4" ref="0x104d7d660" loc="1154:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINC6" ref="0x104d79ca0" loc="1182:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADLAR" ref="0x104d879a0" loc="1093:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PA2" ref="0x104d85c20" loc="1106:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGMA1" ref="0x104d52340" loc="876:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGMB3" ref="0x104d4e340" loc="902:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="TOS_SERIAL_UNKNOWN_ID" ref="0x104bf2da0" loc="98:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWA3" ref="0x104d1bc80" loc="687:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1B1" ref="0x104d51020" loc="882:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADHSM" ref="0x104d46c80" loc="961:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="P_ALL" ref="0x10461a020" loc="80:/usr/include/sys/wait.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INT3" ref="0x104d3e690" loc="763:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC31" ref="0x104d43070" loc="730:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINF3" ref="0x104d92ca0" loc="1275:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_WAVE16_PWM_FAST_COMPARE" ref="0x1050871e0" loc="227:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_WAVE16_RESERVED" ref="0x1050889f0" loc="225:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM21" ref="0x104d55660" loc="858:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM33" ref="0x104d4b020" loc="920:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_SNGL_ADC5" ref="0x104d9c640" loc="64:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XMM0" ref="0x104d16020" loc="714:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:129" name="ATM128_ICR3H" ref="0x104d27a50" loc="269:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS2" ref="0x104d32630" loc="839:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:51" name="ATM128_TCCR0" ref="0x104d09a90" loc="169:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="LAST_READS" ref="0x10438d820" loc="6:TemperatureMonitor.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC1C" ref="0x104d499a0" loc="939:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_RIGHT_ADJUST" ref="0x104d9eb70" loc="52:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PB0" ref="0x104d7f020" loc="1138:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3AL" ref="0x104d25710" loc="283:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WDP1" ref="0x104d46330" loc="956:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PC2" ref="0x104d7b620" loc="1166:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PD4" ref="0x104d77c40" loc="1194:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PE6" ref="0x104d9a320" loc="1222:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK8_DIVIDE_128" ref="0x1050717a0" loc="58:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM00" ref="0x104d57980" loc="847:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ADPS2" ref="0x104d58960" loc="1086:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWA6" ref="0x104d1b350" loc="684:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:140" name="ATM128_TCCR3C" ref="0x104d23070" loc="298:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INT6" ref="0x104d3fcf0" loc="760:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW10" ref="0x104d36c80" loc="817:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS0" ref="0x104d65660" loc="1004:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_WAVE16_PWM_FAST_8BIT" ref="0x10508ad90" loc="217:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_PORTE" ref="0x104d14540" loc="36:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC0" ref="0x104d57020" loc="844:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PIND0" ref="0x104d9bca0" loc="1218:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINE2" ref="0x104d96340" loc="1246:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WDCE" ref="0x104d47990" loc="953:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_PRESCALE_16" ref="0x104dbc980" loc="109:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_WAVE16_CTC_CAPTURE" ref="0x1050886d0" loc="224:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES" ref="0x104d4e020" loc="901:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="ATM128_TCNT0" ref="0x104d09710" loc="166:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_POWER_ADC_NR" ref="0x104da0410" loc="128:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="AVR_CLOCK_DIVIDE_8" ref="0x10506d3c0" loc="78:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_COMPARE_SET" ref="0x10506b360" loc="94:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDA6" ref="0x104d84960" loc="1112:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK8_NORMAL" ref="0x105072740" loc="54:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC71" ref="0x104d429f0" loc="740:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="REFS0" ref="0x104d87680" loc="1092:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDF7" ref="0x104d94650" loc="1261:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="SERIAL_PROTO_PACKET_UNKNOWN" ref="0x104bf0020" loc="106:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSR" ref="0x104d136f0" loc="47:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:55" name="ATM128_TIMSK" ref="0x104d08c50" loc="182:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:46" name="ATM128_TCCR1B" ref="0x104d0a8e0" loc="154:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="NOISE_BIN_SIZE" ref="0x104a18d60" loc="56:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="OCDR2" ref="0x104d47020" loc="948:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM00" ref="0x104d65340" loc="1003:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCIE2" ref="0x104d3ccc0" loc="779:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF3C" ref="0x104d36020" loc="811:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SM2" ref="0x104d35920" loc="821:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV1" ref="0x104d39650" loc="794:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PF0" ref="0x104d94320" loc="1258:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ10" ref="0x104d66660" loc="997:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PG2" ref="0x104d90020" loc="1283:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="ATM128_ADC_SNGL_1_23" ref="0x104dbfa40" loc="89:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE8_CTC" ref="0x10506c020" loc="85:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:59" name="ATM128_RAMPZ" ref="0x104d07aa0" loc="194:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INTF3" ref="0x104d3c020" loc="773:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWWC" ref="0x104d1c970" loc="679:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="RAMPZ0" ref="0x104d44cc0" loc="727:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_ADC_DIFF_ADC10_10x" ref="0x104dc3360" loc="68:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_ADC_DIFF_ADC22_10x" ref="0x104dc3d40" loc="71:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="XDIV3" ref="0x104d44020" loc="721:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="HDLC_CTLESC_BYTE" ref="0x104bf3b40" loc="89:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE1" ref="0x104d62c60" loc="1025:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_WAVE16_PWM_FAST_9BIT" ref="0x1050891c0" loc="218:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_ENABLE_OFF" ref="0x104db8670" loc="145:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="EOFF" ref="0x104723450" loc="56:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_ENABLE_ON" ref="0x104db89b0" loc="146:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3C" ref="0x104d27dd0" loc="272:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDF1" ref="0x104d93950" loc="1267:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDG3" ref="0x104d90c60" loc="1289:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM1" ref="0x104d61340" loc="1027:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDB0" ref="0x104d7e950" loc="1148:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDC2" ref="0x104d79020" loc="1176:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDD4" ref="0x104d75640" loc="1204:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDE6" ref="0x104d99c60" loc="1232:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF1B" ref="0x104d39340" loc="793:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC3B" ref="0x104d4aca0" loc="933:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PE1" ref="0x104d99320" loc="1227:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE1A" ref="0x104d3b660" loc="782:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPR0" ref="0x104d69c60" loc="980:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PF3" ref="0x104d95920" loc="1255:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK8_DIVIDE_8" ref="0x105072af0" loc="55:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC0" ref="0x104d61670" loc="1030:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ACSR" ref="0x104d121c0" loc="54:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCW" ref="0x104d148b0" loc="39:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="ATM128_ETIMSK" ref="0x104d27020" loc="264:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="XDIV6" ref="0x104d16680" loc="718:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK8_DIVIDE_32" ref="0x105071020" loc="56:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:100" name="ATM128_DDRG" ref="0x104d05020" loc="216:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE3" ref="0x104d38980" loc="802:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINF1" ref="0x104d91340" loc="1277:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PING3" ref="0x104d8fca0" loc="1296:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWS5" ref="0x104d19330" loc="696:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS21" ref="0x104d55c80" loc="860:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINA5" ref="0x104d82660" loc="1123:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINB7" ref="0x104d7ec90" loc="1151:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:112" name="ATM128_TWBR" ref="0x104d04c50" loc="238:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:67" name="SERIAL_PROTO_ACK" ref="0x104bf13b0" loc="103:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1B" ref="0x104d0c8b0" loc="139:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PA5" ref="0x104d85320" loc="1103:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1" ref="0x104d0de00" loc="134:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_FLAG_OFF" ref="0x104db9bf0" loc="139:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDA1" ref="0x104d83950" loc="1117:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDB3" ref="0x104d7e020" loc="1145:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDC5" ref="0x104d7a640" loc="1173:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDD7" ref="0x104d76c50" loc="1201:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_FREE_RUNNING_ON" ref="0x104db95b0" loc="134:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK8_DIVIDE_1024" ref="0x105070020" loc="60:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_WAVE16_PWM_FAST_CAPTURE" ref="0x105088d60" loc="226:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_MIN_TRACE" ref="0x104a17c60" loc="60:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3BL" ref="0x104d26c40" loc="278:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC10" ref="0x104d42070" loc="735:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINF6" ref="0x104d92340" loc="1272:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDF2" ref="0x104d93640" loc="1266:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDG4" ref="0x104d90950" loc="1288:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS02" ref="0x104d56020" loc="849:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM00" ref="0x104d57340" loc="845:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM12" ref="0x104d4dcc0" loc="912:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_POWER_IDLE" ref="0x104da0070" loc="127:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COMB0" ref="0x104d53980" loc="873:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ERESERVE" ref="0x1047a2140" loc="60:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE1" ref="0x104d62340" loc="1022:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_ADC_DIFF_ADC01_1x" ref="0x104dc2a90" loc="75:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:144" name="ATM128_UBRR0H" ref="0x104d23400" loc="301:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:154" name="ATM128_UCSR1B" ref="0x104d223b0" loc="313:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE" ref="0x104d5f020" loc="1040:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ADIE" ref="0x104d58640" loc="1085:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="JTD" ref="0x104d34340" loc="826:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_ENABLE_OFF" ref="0x104dbbe80" loc="121:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:109" name="ATM128_XMCRA" ref="0x104d04550" loc="232:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIF" ref="0x104d45c80" loc="968:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM3C1" ref="0x104d4f020" loc="894:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SRE" ref="0x104d36660" loc="815:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_PINC" ref="0x104d108b0" loc="87:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SRW01" ref="0x104d18c90" loc="706:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINC1" ref="0x104d78ca0" loc="1187:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PIND3" ref="0x104d9b340" loc="1215:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINE5" ref="0x104d979a0" loc="1243:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:56" name="ATM128_EIFR" ref="0x104d07020" loc="185:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:53" name="ATM128_MCUCR" ref="0x104d08560" loc="176:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCDR0" ref="0x104d47660" loc="950:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3" ref="0x104d25e00" loc="287:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_SNGL_ADC2" ref="0x104d9dc20" loc="61:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_ADC_DIFF_ADC32_200x" ref="0x104dc2750" loc="74:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDE1" ref="0x104d98c60" loc="1237:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_PRESCALE_4" ref="0x104dbc340" loc="107:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:49" name="ATM128_OCR0" ref="0x104d09390" loc="163:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC50" ref="0x104d419d0" loc="745:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:39" name="ATM128_ICR1H" ref="0x104d0c530" loc="136:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3L" ref="0x104d276f0" loc="268:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INTF1" ref="0x104d3c660" loc="775:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="EINVAL" ref="0x104723a90" loc="58:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_ADC_DIFF_ADC10_200x" ref="0x104dc3a00" loc="70:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_ADC_DIFF_ADC22_200x" ref="0x104dc2400" loc="73:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN" ref="0x104a196e0" loc="52:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_ADC_DIFF_ADC12_1x" ref="0x104dc09e0" loc="84:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SE" ref="0x104d35020" loc="818:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ADSC" ref="0x104d59ca0" loc="1082:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="OCDR5" ref="0x104d48660" loc="945:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PB4" ref="0x104d80320" loc="1134:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="ATM128_OCR1AH" ref="0x104d0ba80" loc="146:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1CL" ref="0x104d281e0" loc="254:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PC6" ref="0x104d7c960" loc="1162:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_PINF" ref="0x104cf0a80" loc="27:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_DDRB" ref="0x104d0f700" loc="99:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINA0" ref="0x104d81660" loc="1128:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINB2" ref="0x104d7dca0" loc="1156:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINC4" ref="0x104d78340" loc="1184:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PIND6" ref="0x104d74990" loc="1212:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES1" ref="0x104d4d680" loc="910:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWPS0" ref="0x104d18020" loc="700:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN" ref="0x104d5fc80" loc="1044:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ01" ref="0x104d65980" loc="1005:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PA0" ref="0x104d84320" loc="1108:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="MOTES" ref="0x10438d4d0" loc="5:TemperatureMonitor.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL1" ref="0x104d67680" loc="992:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INTF6" ref="0x104d3d680" loc="770:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWA1" ref="0x104d1a330" loc="689:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC1" ref="0x104d62020" loc="1021:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_TIMER_COMPARE_SET" ref="0x10508d0b0" loc="189:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM1C1" ref="0x104d51660" loc="884:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INT1" ref="0x104d3ecb0" loc="765:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_ENABLE_ON" ref="0x104dba1b0" loc="122:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_WAVE16_CTC_COMPARE" ref="0x10508aa40" loc="216:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM31" ref="0x104d4f660" loc="896:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS0" ref="0x104d32c30" loc="841:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE1" ref="0x104d5d020" loc="1052:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-5" name="NOISE_MAX" ref="0x104a19af0" loc="53:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ACME" ref="0x104d45020" loc="962:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCL" ref="0x104d13020" loc="43:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC1A" ref="0x104d49360" loc="937:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PC0" ref="0x104d7bc20" loc="1168:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PD2" ref="0x104d76320" loc="1196:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PE4" ref="0x104d9a920" loc="1224:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PF6" ref="0x104d95020" loc="1252:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ADPS0" ref="0x104d87020" loc="1088:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWA4" ref="0x104d1b970" loc="686:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM0" ref="0x104d68640" loc="985:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_ADC_DIFF_ADC21_1x" ref="0x104dc11b0" loc="77:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:139" name="ATM128_TCCR3A" ref="0x104d24c70" loc="295:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_COMPARE_OFF" ref="0x10506c9d0" loc="91:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="NOISE_DEFAULT_ELEMENT_SIZE" ref="0x104a17530" loc="58:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK16_EXTERNAL_RISE" ref="0x10506e410" loc="71:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_PORTC" ref="0x104d0f020" loc="93:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB80" ref="0x104d5b980" loc="1067:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINE0" ref="0x104d96980" loc="1248:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS00" ref="0x104d56640" loc="851:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS12" ref="0x104d4c020" loc="913:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC" ref="0x104d4fcb0" loc="900:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE0" ref="0x104d5ccc0" loc="1063:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:60" name="ATM128_XDIV" ref="0x104d07e10" loc="197:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDA4" ref="0x104d83020" loc="1114:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDB6" ref="0x104d7f660" loc="1142:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPMEN" ref="0x104d3f6b0" loc="756:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC01" ref="0x104d42390" loc="736:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDF5" ref="0x104d94c70" loc="1263:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="BLBSET" ref="0x104d40d10" loc="753:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOCC" ref="0x104d4a640" loc="929:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PGWRT" ref="0x104d3f070" loc="754:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COMA1" ref="0x104d53020" loc="870:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="ATM128_OSCCAL" ref="0x104d048e0" loc="235:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM10" ref="0x104d67cc0" loc="994:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="AS0" ref="0x104d54340" loc="864:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:98" name="ATM128_PORTF" ref="0x104d068f0" loc="210:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL1" ref="0x104d66980" loc="998:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN1" ref="0x104d5d980" loc="1055:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ACBG" ref="0x104d5a330" loc="1072:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE0" ref="0x104d3a020" loc="785:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF3A" ref="0x104d37670" loc="808:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SM0" ref="0x104d35620" loc="820:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PG0" ref="0x104d90620" loc="1285:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:149" name="ATM128_UCSR0C" ref="0x104d23790" loc="304:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:45" name="ATM128_TCNT1H" ref="0x104d0a550" loc="151:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3L" ref="0x104d241e0" loc="288:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDE" ref="0x104d47c90" loc="954:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADFR" ref="0x104d58020" loc="1083:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="MUX1" ref="0x104d86640" loc="1097:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_ADC_DIFF_ADC02_1x" ref="0x104dc06a0" loc="83:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_PRESCALE_32" ref="0x104dbcca0" loc="110:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM3A0" ref="0x104d50680" loc="891:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XDIV1" ref="0x104d44660" loc="723:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ2" ref="0x104d5e340" loc="1046:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3A" ref="0x104d253a0" loc="282:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:156" name="ATM128_UDR1" ref="0x104d22ab0" loc="319:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDG1" ref="0x104d8f330" loc="1291:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FALSE" ref="0x1048e5d80" loc="76:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="EBUSY" ref="0x104723770" loc="57:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="ATM128_TIMER0_TICKSPPS" ref="0x104db3750" loc="61:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDC0" ref="0x104d79640" loc="1178:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDD2" ref="0x104d75c60" loc="1206:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDE4" ref="0x104d98330" loc="1234:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="CHANNEL_BANDGAP" ref="0x104db3020" loc="58:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE3C" ref="0x104d38ca0" loc="803:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK16_OFF" ref="0x1050707c0" loc="64:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC41" ref="0x104d41cf0" loc="746:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWGCE" ref="0x104d1a960" loc="691:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CSB1" ref="0x104d4ec80" loc="905:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MUX4" ref="0x104d87cb0" loc="1094:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_POWER_EXT_STANDBY" ref="0x104da07f0" loc="129:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR0" ref="0x104d60330" loc="1034:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PB7" ref="0x104d81980" loc="1131:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE8_PWM_FAST" ref="0x10506c340" loc="86:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE1" ref="0x104d3bca0" loc="784:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="DEFAULT_CHANNEL_SIZE" ref="0x10491a7a0" loc="48:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_DDRE" ref="0x104d141c0" loc="33:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PING1" ref="0x104d8e340" loc="1298:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_COMPARE_CLEAR" ref="0x10506b060" loc="93:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWS3" ref="0x104d19950" loc="698:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SRL1" ref="0x104d18660" loc="704:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS31" ref="0x104d4b960" loc="923:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINA3" ref="0x104d82ca0" loc="1125:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:116" name="ATM128_TWCR" ref="0x104d03a70" loc="250:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINB5" ref="0x104d7d340" loc="1153:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINC7" ref="0x104d79980" loc="1181:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CPOL" ref="0x104d69330" loc="977:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SPE" ref="0x104d6a970" loc="974:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PA3" ref="0x104d85920" loc="1105:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_ADC_DIFF_ADC11_1x" ref="0x104dc2dd0" loc="76:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM1A0" ref="0x104d52cc0" loc="881:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:115" name="ATM128_TWDR" ref="0x104d03700" loc="247:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INT4" ref="0x104d3e380" loc="762:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3CL" ref="0x104d261e0" loc="273:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:135" name="ATM128_OCR3AH" ref="0x104d25a80" loc="284:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC20" ref="0x104d439d0" loc="733:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINF4" ref="0x104d92980" loc="1274:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM10" ref="0x104d50020" loc="887:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_SNGL_ADC6" ref="0x104d9c950" loc="65:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XMM1" ref="0x104d17c90" loc="713:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COMC0" ref="0x104d52020" loc="875:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="NOISE_QUANTIZE_INTERVAL" ref="0x104a183f0" loc="55:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PB1" ref="0x104d80c20" loc="1137:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="WDP2" ref="0x104d46020" loc="955:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PC3" ref="0x104d7b320" loc="1165:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PD5" ref="0x104d77940" loc="1193:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PE7" ref="0x104d9a020" loc="1221:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:152" name="ATM128_UBRR1H" ref="0x104d23b20" loc="307:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM01" ref="0x104d57660" loc="846:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUSR" ref="0x104d09e10" loc="172:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE3" ref="0x104d38020" loc="799:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDRF" ref="0x104d34960" loc="828:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM0" ref="0x104d33960" loc="835:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RWWSRE" ref="0x104d409f0" loc="752:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE" ref="0x104d5f660" loc="1042:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INT7" ref="0x104d3f9e0" loc="759:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE0" ref="0x104d60020" loc="1033:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK16_DIVIDE_1024" ref="0x10506fb90" loc="69:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SRW11" ref="0x104d17340" loc="708:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_PINA" ref="0x104d0fdf0" loc="105:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS1" ref="0x104d66020" loc="995:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PIND1" ref="0x104d9b980" loc="1217:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINE3" ref="0x104d96020" loc="1245:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWSTA" ref="0x104d1c340" loc="677:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWIE" ref="0x104d1b020" loc="681:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1" ref="0x104d0be00" loc="149:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_PRESCALE_2" ref="0x104dbdbd0" loc="105:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_SNGL_ADC0" ref="0x104d9d600" loc="59:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDA7" ref="0x104d84650" loc="1111:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="CHANNEL_GND" ref="0x104db3370" loc="59:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC60" ref="0x104d41390" loc="743:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="REFS1" ref="0x104d87360" loc="1091:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_ADC_DIFF_ADC00_200x" ref="0x104dc36b0" loc="69:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE0" ref="0x104d5c680" loc="1061:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_PRESCALE_128" ref="0x104dbb350" loc="112:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_ADC_DIFF_ADC71_1x" ref="0x104dc0360" loc="82:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:122" name="ATM128_TCCR1C" ref="0x104d288e0" loc="258:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5120" name="READ_PERIOD" ref="0x10438db70" loc="7:TemperatureMonitor.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCDR3" ref="0x104d48ca0" loc="947:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM01" ref="0x104d65020" loc="1002:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="ATM128_OCR1BH" ref="0x104d0b020" loc="141:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PB2" ref="0x104d80920" loc="1136:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PC4" ref="0x104d7b020" loc="1164:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PD6" ref="0x104d77640" loc="1192:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PF1" ref="0x104d94020" loc="1257:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOV2" ref="0x104d3a980" loc="790:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PG3" ref="0x104d91c80" loc="1282:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ11" ref="0x104d66340" loc="996:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INTF4" ref="0x104d3dcc0" loc="772:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_SPCR" ref="0x104d11390" loc="69:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="XDIV4" ref="0x104d16cc0" loc="720:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC" ref="0x104d64640" loc="1011:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWEN" ref="0x104d1cc80" loc="680:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:48" name="ATM128_ASSR" ref="0x104d09020" loc="160:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE16_NORMAL" ref="0x10508bd50" loc="212:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_POWER_SAVE" ref="0x104da0b80" loc="130:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDB1" ref="0x104d7e640" loc="1147:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDC3" ref="0x104d7ac60" loc="1175:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDD5" ref="0x104d75330" loc="1203:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDE7" ref="0x104d99950" loc="1231:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCF1C" ref="0x104d36340" loc="812:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC3C" ref="0x104d49020" loc="934:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PD0" ref="0x104d76920" loc="1198:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PE2" ref="0x104d99020" loc="1226:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE1B" ref="0x104d3b980" loc="783:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SPR1" ref="0x104d69950" loc="979:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PF4" ref="0x104d95620" loc="1254:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:33" name="ATM128_WDTCR" ref="0x104d0ec60" loc="119:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN0" ref="0x104d5b020" loc="1064:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL" ref="0x104d68020" loc="983:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CHANNEL_THERMISTOR" ref="0x104db47e0" loc="56:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK16_NORMAL" ref="0x105070b60" loc="65:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM20" ref="0x104d55340" loc="857:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XMBK" ref="0x104d17670" loc="711:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC1" ref="0x104d63c60" loc="1020:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF3" ref="0x104d37350" loc="807:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:57" name="ATM128_EIMSK" ref="0x104d073a0" loc="188:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ENOMEM" ref="0x1047a27a0" loc="62:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_PORTA" ref="0x104d0e540" loc="111:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWS6" ref="0x104d19020" loc="695:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS22" ref="0x104d55970" loc="859:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS10" ref="0x104d4c640" loc="915:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC3" ref="0x104d4c980" loc="918:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ACIS0" ref="0x104d59660" loc="1078:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINA6" ref="0x104d82340" loc="1122:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1C" ref="0x104d03df0" loc="253:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_ADC_DIFF_ADC32_10x" ref="0x104dc20b0" loc="72:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:106" name="ATM128_EICRA" ref="0x104d05e10" loc="226:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ACI" ref="0x104d5a930" loc="1074:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE" ref="0x104d64950" loc="1012:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PA6" ref="0x104d85020" loc="1102:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:69" name="SERIAL_PROTO_PACKET_NOACK" ref="0x104bf1b60" loc="105:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CHANNEL_BATTERY" ref="0x104db4bf0" loc="57:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDA2" ref="0x104d83640" loc="1116:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDB4" ref="0x104d7fc80" loc="1144:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDC6" ref="0x104d7a330" loc="1172:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE16_PWM_10BIT" ref="0x10508a700" loc="215:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC11" ref="0x104d43cf0" loc="734:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINF7" ref="0x104d92020" loc="1271:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_PRESCALE_2b" ref="0x104dbc020" loc="106:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDF3" ref="0x104d93330" loc="1265:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XDIVEN" ref="0x104d16360" loc="717:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOCA" ref="0x104d4a020" loc="927:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM01" ref="0x104d57ca0" loc="848:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM13" ref="0x104d4d9a0" loc="911:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COMB1" ref="0x104d53660" loc="872:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ELAST" ref="0x1047a2e00" loc="64:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE" ref="0x104d63320" loc="1015:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="IVSEL" ref="0x104d35c40" loc="822:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_ADC_DIFF_ADC32_1x" ref="0x104dbf0b0" loc="86:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ACIC" ref="0x104d59020" loc="1076:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_UCSR0A" ref="0x104d12c70" loc="63:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:157" name="ATM128_UCSR1C" ref="0x104d22e40" loc="322:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK16_DIVIDE_64" ref="0x10506f3e0" loc="67:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TSM" ref="0x104d46960" loc="960:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PUD" ref="0x104d45320" loc="963:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DORD" ref="0x104d6ac80" loc="975:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADIF" ref="0x104d58330" loc="1084:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_START_CONVERSION_OFF" ref="0x104dba840" loc="127:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB8" ref="0x104d5e960" loc="1048:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="P_PID" ref="0x10461a2a0" loc="81:/usr/include/sys/wait.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:108" name="ATM128_XMCRB" ref="0x104d041d0" loc="229:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM3B0" ref="0x104d50cc0" loc="893:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="JTRF" ref="0x104d34650" loc="827:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_PIND" ref="0x104d11de0" loc="78:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINB0" ref="0x104d7c340" loc="1158:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCF2" ref="0x104d3a670" loc="789:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM0" ref="0x104d32020" loc="837:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINC2" ref="0x104d78980" loc="1186:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PIND4" ref="0x104d9b020" loc="1214:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ0" ref="0x104d67020" loc="988:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINE6" ref="0x104d97680" loc="1242:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_TIMER_COMPARE_CLEAR" ref="0x10508ece0" loc="188:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPMIE" ref="0x104d403b0" loc="750:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCDR1" ref="0x104d47340" loc="949:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_SNGL_ADC3" ref="0x104d9c020" loc="62:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PSR0" ref="0x104d45630" loc="964:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WCOL" ref="0x104d6a020" loc="969:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDD0" ref="0x104d74330" loc="1208:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDE2" ref="0x104d98950" loc="1236:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE16_PWM_9BIT" ref="0x10508a3d0" loc="214:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE3A" ref="0x104d38340" loc="800:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC51" ref="0x104d416b0" loc="744:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X0" ref="0x104d60950" loc="1036:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:113" name="ATM128_TWSR" ref="0x104d03020" loc="241:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MUX2" ref="0x104d86330" loc="1096:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="OCDR6" ref="0x104d48340" loc="944:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB80" ref="0x104d5bca0" loc="1068:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PB5" ref="0x104d80020" loc="1133:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PC7" ref="0x104d7c660" loc="1161:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_DDRC" ref="0x104d10c20" loc="90:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="ATM128_PING" ref="0x104d06c60" loc="213:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE" ref="0x104d5f340" loc="1041:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINA1" ref="0x104d81340" loc="1127:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINB3" ref="0x104d7d980" loc="1155:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINC5" ref="0x104d78020" loc="1183:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWPS1" ref="0x104d19c70" loc="699:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PIND7" ref="0x104d74670" loc="1211:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ02" ref="0x104d5b660" loc="1066:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PA1" ref="0x104d84020" loc="1107:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK8_DIVIDE_256" ref="0x105071b60" loc="59:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGMA0" ref="0x104d52660" loc="877:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGMB2" ref="0x104d4e660" loc="903:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INTF7" ref="0x104d3d360" loc="769:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWA2" ref="0x104d1a020" loc="688:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CHANNEL_RSSI" ref="0x104db43b0" loc="55:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_PRESCALE_8" ref="0x104dbc660" loc="108:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TCR0UB" ref="0x104d54ca0" loc="867:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM1B0" ref="0x104d51340" loc="883:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INT2" ref="0x104d3e9a0" loc="764:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:133" name="ATM128_OCR3BH" ref="0x104d25020" loc="279:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC30" ref="0x104d43390" loc="731:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINF2" ref="0x104d91020" loc="1276:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PING4" ref="0x104d8f980" loc="1295:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_PRESCALE" ref="0x104dbb6b0" loc="116:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM20" ref="0x104d56c90" loc="855:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM32" ref="0x104d4b340" loc="921:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="ATM128_ADC_DIFF_ADC42_1x" ref="0x104dbf3f0" loc="87:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_SNGL_ADC4" ref="0x104d9c330" loc="63:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_WAVE16_PWM_CAPTURE_LOW" ref="0x105089890" loc="220:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS1" ref="0x104d32930" loc="840:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1AL" ref="0x104d0b710" loc="145:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWINT" ref="0x104d1fc60" loc="675:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK16_DIVIDE_256" ref="0x10506f7b0" loc="68:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="ATM128_SFIOR" ref="0x104d0e8e0" loc="116:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_SERIAL_CC1000_ID" ref="0x104bf2620" loc="96:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC" ref="0x104d14c00" loc="41:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC1B" ref="0x104d49680" loc="938:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM" ref="0x104d63930" loc="1017:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PC1" ref="0x104d7b920" loc="1167:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WDP0" ref="0x104d46640" loc="957:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PD3" ref="0x104d76020" loc="1195:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PE5" ref="0x104d9a620" loc="1223:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PF7" ref="0x104d96ca0" loc="1251:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_WAVE16_PWM_FAST_10BIT" ref="0x105089520" loc="219:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ADPS1" ref="0x104d58c80" loc="1087:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWA5" ref="0x104d1b660" loc="685:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE1" ref="0x104d3b340" loc="781:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="EXTRF" ref="0x104d33020" loc="830:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM1" ref="0x104d68330" loc="984:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ" ref="0x104d5e020" loc="1045:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_POWER_STANDBY" ref="0x104d9f020" loc="131:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="BORF" ref="0x104d34c70" loc="829:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:138" name="ATM128_TCCR3B" ref="0x104d248e0" loc="292:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB81" ref="0x104d5c020" loc="1057:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_PORTD" ref="0x104d10540" loc="84:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINE1" ref="0x104d96660" loc="1247:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS01" ref="0x104d56330" loc="850:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PGERS" ref="0x104d3f390" loc="755:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE1" ref="0x104d5d340" loc="1053:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ADEN" ref="0x104d59990" loc="1081:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADMUX" ref="0x104d13de0" loc="51:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDA5" ref="0x104d84c70" loc="1113:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="TOS_AM_GROUP" ref="0x104bf8b50" loc="27:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDB7" ref="0x104d7f350" loc="1141:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC70" ref="0x104d42d10" loc="741:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDF6" ref="0x104d94960" loc="1262:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:137" name="ATM128_TCNT3H" ref="0x104d24550" loc="289:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="AVR_CLOCK_OFF" ref="0x10506ebb0" loc="76:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:68" name="SERIAL_PROTO_PACKET_ACK" ref="0x104bf1780" loc="104:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:47" name="ATM128_TCCR1A" ref="0x104d0ac70" loc="157:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:63" name="ATM128_SREG" ref="0x104d061e0" loc="202:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM11" ref="0x104d679a0" loc="993:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:121" name="ATM128_OCR1CH" ref="0x104d28550" loc="255:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_START_CONVERSION_ON" ref="0x104dbabb0" loc="128:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOS_SERIAL_ACTIVE_MESSAGE_ID" ref="0x104bf2270" loc="95:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:101" name="ATM128_PORTG" ref="0x104d053a0" loc="219:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF3B" ref="0x104d37990" loc="809:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SM1" ref="0x104d35320" loc="819:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PG1" ref="0x104d90320" loc="1284:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOV0" ref="0x104d39c70" loc="796:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_UBRR0L" ref="0x104d12550" loc="57:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INTF2" ref="0x104d3c340" loc="774:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ECANCEL" ref="0x104723140" loc="55:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM3A1" ref="0x104d50360" loc="890:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_SPDR" ref="0x104d11a70" loc="75:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XDIV2" ref="0x104d44340" loc="722:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_VREF_2_56" ref="0x104d9e530" loc="47:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK8_DIVIDE_64" ref="0x1050713e0" loc="57:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR" ref="0x104d63020" loc="1014:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE0" ref="0x104d60640" loc="1035:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_ADC_DIFF_ADC31_1x" ref="0x104dc14f0" loc="78:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_HASHTABLE_SIZE" ref="0x104a178e0" loc="59:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3B" ref="0x104d268d0" loc="277:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X" ref="0x104d63620" loc="1016:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_TIMER_COMPARE_TOGGLE" ref="0x10508e990" loc="187:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_VREF_RSVD" ref="0x104d9e180" loc="46:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDF0" ref="0x104d93c60" loc="1268:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDG2" ref="0x104d8f020" loc="1290:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_DIFF_ADC00_10x" ref="0x104dc3020" loc="67:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM0" ref="0x104d60c70" loc="1037:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW" ref="0x104d36960" loc="816:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ACD" ref="0x104d5a020" loc="1071:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK16_DIVIDE_8" ref="0x10506f020" loc="66:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDC1" ref="0x104d79330" loc="1177:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDD3" ref="0x104d75950" loc="1205:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDE5" ref="0x104d98020" loc="1233:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF1A" ref="0x104d39020" loc="792:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC3A" ref="0x104d4a980" loc="932:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PE0" ref="0x104d99620" loc="1228:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PF2" ref="0x104d95c20" loc="1256:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUCSR" ref="0x104d081e0" loc="173:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS" ref="0x104d68950" loc="986:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PG4" ref="0x104d91980" loc="1281:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_WAVE16_PWM_COMPARE_LOW" ref="0x105089c00" loc="221:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1L" ref="0x104d0c1d0" loc="135:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ENOACK" ref="0x1047a2ac0" loc="63:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CSB2" ref="0x104d4e970" loc="904:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:183" name="SIM_LOG_OUTPUT_COUNT" ref="0x104916070" loc="64:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPI2X" ref="0x104d6a340" loc="970:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK16_EXTERNAL_FALL" ref="0x10506e020" loc="70:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:126" name="HDLC_FLAG_BYTE" ref="0x104bf37b0" loc="88:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CPHA" ref="0x104d69640" loc="978:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF1" ref="0x104d3ac90" loc="791:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR1" ref="0x104d62950" loc="1024:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:97" name="ATM128_DDRF" ref="0x104d06570" loc="207:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOIE2" ref="0x104d3b020" loc="780:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINF0" ref="0x104d91660" loc="1278:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PING2" ref="0x104d8e020" loc="1297:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE8_PWM" ref="0x10506dc80" loc="84:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWS4" ref="0x104d19640" loc="697:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRL2" ref="0x104d18350" loc="703:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINA4" ref="0x104d82980" loc="1124:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ERETRY" ref="0x104723db0" loc="59:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS20" ref="0x104d54020" loc="861:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC1" ref="0x104d4d360" loc="909:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS32" ref="0x104d4b650" loc="922:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1A" ref="0x104d0b3a0" loc="144:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINB6" ref="0x104d7d020" loc="1152:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PA4" ref="0x104d85620" loc="1104:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDA0" ref="0x104d83c60" loc="1118:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDB2" ref="0x104d7e330" loc="1146:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM1A1" ref="0x104d529a0" loc="880:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDC4" ref="0x104d7a950" loc="1174:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INT5" ref="0x104d3e070" loc="761:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDD6" ref="0x104d75020" loc="1202:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC21" ref="0x104d436b0" loc="732:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINF5" ref="0x104d92660" loc="1273:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWSTO" ref="0x104d1c660" loc="678:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM11" ref="0x104d51ca0" loc="886:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_SNGL_ADC7" ref="0x104d9cc60" loc="66:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XMM2" ref="0x104d17980" loc="712:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COMC1" ref="0x104d53ca0" loc="874:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PSR321" ref="0x104d45950" loc="965:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:124" name="ATM128_ETIFR" ref="0x104d28c60" loc="261:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:37" name="ATM128_TCCR2" ref="0x104d0da90" loc="131:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE0" ref="0x104d61ca0" loc="1032:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:155" name="ATM128_UCSR1A" ref="0x104d22740" loc="316:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM1" ref="0x104d32330" loc="838:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIE" ref="0x104d6a670" loc="973:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM3C0" ref="0x104d4f340" loc="895:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE1" ref="0x104d62640" loc="1023:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_PINB" ref="0x104d0f390" loc="96:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SRW00" ref="0x104d17020" loc="707:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINC0" ref="0x104d77020" loc="1188:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF0" ref="0x104d39960" loc="795:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC2" ref="0x104d56970" loc="854:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PIND2" ref="0x104d9b660" loc="1216:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINE4" ref="0x104d97cc0" loc="1244:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_VREF_OFF" ref="0x104d9fa20" loc="44:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE" ref="0x104d64c50" loc="1013:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE8_NORMAL" ref="0x10506d990" loc="83:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ACO" ref="0x104d5a630" loc="1073:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_LEFT_ADJUST" ref="0x104d9d020" loc="53:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="AVR_CLOCK_ON" ref="0x10506d020" loc="77:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_TIMER_COMPARE_NORMAL" ref="0x10508e640" loc="186:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN_QUANTIZE" ref="0x104a18020" loc="54:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MSTR" ref="0x104d69020" loc="976:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:29" name="ATM128_ADC_DIFF_ADC52_1x" ref="0x104dbf730" loc="88:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:36" name="ATM128_TCNT2" ref="0x104d0d710" loc="128:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_SNGL_ADC1" ref="0x104d9d910" loc="60:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="NOISE_NUM_VALUES" ref="0x104a303f0" loc="61:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDE0" ref="0x104d97020" loc="1238:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC61" ref="0x104d41070" loc="742:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE1" ref="0x104d5eca0" loc="1051:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INTF0" ref="0x104d3c980" loc="776:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PORF" ref="0x104d33330" loc="831:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB8" ref="0x104d5e650" loc="1047:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_VREF_AVCC" ref="0x104d9fdd0" loc="45:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCDR4" ref="0x104d48980" loc="946:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PB3" ref="0x104d80620" loc="1135:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PC5" ref="0x104d7cc60" loc="1163:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PD7" ref="0x104d77340" loc="1191:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOS_SERIAL_802_15_4_ID" ref="0x104bf29e0" loc="97:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCR0UB" ref="0x104d54980" loc="866:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADCH" ref="0x104d13370" loc="44:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV3" ref="0x104d37ca0" loc="810:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ00" ref="0x104d65ca0" loc="1006:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ12" ref="0x104d5dca0" loc="1056:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1L" ref="0x104d0a1e0" loc="150:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL0" ref="0x104d66cc0" loc="1001:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INTF5" ref="0x104d3d9a0" loc="771:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWA0" ref="0x104d1a640" loc="690:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC0" ref="0x104d61980" loc="1031:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCR" ref="0x104d05720" loc="222:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE16_PWM_8BIT" ref="0x10508a0b0" loc="213:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM1C0" ref="0x104d51980" loc="885:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SUCCESS" ref="0x1049e4770" loc="52:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IVCE" ref="0x104d34020" loc="823:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ESIZE" ref="0x1049e4da0" loc="54:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="XDIV5" ref="0x104d169a0" loc="719:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INT0" ref="0x104d3d020" loc="766:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:131" name="ATM128_OCR3CH" ref="0x104d26550" loc="274:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM30" ref="0x104d4f980" loc="897:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_COMPARE_TOGGLE" ref="0x10506ccf0" loc="92:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_FLAG_ON" ref="0x104db8020" loc="140:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE0" ref="0x104d5c9a0" loc="1062:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65535" name="AM_BROADCAST_ADDR" ref="0x104bf85a0" loc="15:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_ADC_DIFF_ADC61_1x" ref="0x104dc0020" loc="81:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FAIL" ref="0x1049e4a80" loc="53:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PD1" ref="0x104d76620" loc="1197:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCIE1C" ref="0x104d37020" loc="804:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PE3" ref="0x104d9ac20" loc="1225:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PF5" ref="0x104d95320" loc="1253:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSRA" ref="0x104d13a60" loc="48:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN1" ref="0x104d5d660" loc="1054:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="ATM128_OCDR" ref="0x104d0d020" loc="122:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM21" ref="0x104d55020" loc="856:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="EALREADY" ref="0x1047a2480" loc="61:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_ADC_DIFF_ADC41_1x" ref="0x104dc1830" loc="79:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="ATM128_ADC_SNGL_GND" ref="0x104dbfd40" loc="90:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ACIS1" ref="0x104d59340" loc="1077:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_PORTB" ref="0x104d0fa80" loc="102:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWS7" ref="0x104d1ac90" loc="694:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS11" ref="0x104d4c330" loc="914:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINA7" ref="0x104d82020" loc="1121:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:114" name="ATM128_TWAR" ref="0x104d03390" loc="244:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:58" name="ATM128_EICRB" ref="0x104d07720" loc="191:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PA7" ref="0x104d86c70" loc="1101:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:54" name="ATM128_TIFR" ref="0x104d088d0" loc="179:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3" ref="0x104d27390" loc="267:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_PRESCALE_64" ref="0x104dbb020" loc="111:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDA3" ref="0x104d83330" loc="1115:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDB5" ref="0x104d7f970" loc="1143:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDC7" ref="0x104d7a020" loc="1171:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC00" ref="0x104d426b0" loc="737:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDF4" ref="0x104d93020" loc="1264:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOCB" ref="0x104d4a330" loc="928:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK8_OFF" ref="0x1050723a0" loc="53:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_AM_ADDRESS" ref="0x104bf6020" loc="28:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COMA0" ref="0x104d53340" loc="871:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_WAVE16_PWM_COMPARE_HIGH" ref="0x105088390" loc="223:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC" ref="0x104d33650" loc="834:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL0" ref="0x104d64020" loc="1007:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN0" ref="0x104d5b340" loc="1065:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_UCSR0B" ref="0x104d128e0" loc="60:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:153" name="ATM128_UBRR1L" ref="0x104d22020" loc="310:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_SPSR" ref="0x104d11700" loc="72:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10240" name="SINK_PERIOD" ref="0x104c50020" loc="8:TemperatureMonitor.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC" ref="0x104d64340" loc="1010:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_POWER_DOWN" ref="0x104d9f3b0" loc="132:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MUX0" ref="0x104d86950" loc="1098:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN" ref="0x104d5f970" loc="1043:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM3B1" ref="0x104d509a0" loc="892:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XDIV0" ref="0x104d44980" loc="724:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_PINE" ref="0x104cf0df0" loc="30:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_DDRA" ref="0x104d0e1c0" loc="108:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TCN0UB" ref="0x104d54660" loc="865:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINB1" ref="0x104d7c020" loc="1157:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1" ref="0x104d33c70" loc="836:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINC3" ref="0x104d78660" loc="1185:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PIND5" ref="0x104d74cb0" loc="1213:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINE7" ref="0x104d97360" loc="1241:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ1" ref="0x104d68c70" loc="987:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWEA" ref="0x104d1c020" loc="676:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_UDR0" ref="0x104d11020" loc="66:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDG0" ref="0x104d8f640" loc="1292:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="RWWSB" ref="0x104d406d0" loc="751:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TRUE" ref="0x1048e30b0" loc="76:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDD1" ref="0x104d74020" loc="1207:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="NOISE_HISTORY" ref="0x104a17140" loc="57:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="P_PGID" ref="0x10461a540" loc="82:/usr/include/sys/wait.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDE3" ref="0x104d98640" loc="1235:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:35" name="ATM128_OCR2" ref="0x104d0d390" loc="125:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCSR" ref="0x104d05a90" loc="223:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="IDRD" ref="0x104d49cd0" loc="942:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE3B" ref="0x104d38660" loc="801:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC40" ref="0x104d40070" loc="747:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X1" ref="0x104d61020" loc="1026:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CSB0" ref="0x104d4d020" loc="906:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL" ref="0x104d67340" loc="989:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="MUX3" ref="0x104d86020" loc="1095:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="sendRequestToNode" ref="0x104cf13d0" loc="61:TemperatureMonitorC.nc">
      <component-ref qname="TemperatureMonitorC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_TASK" ref="0x104c3bda0" loc="56:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="NUM_TASKS" ref="0x104c3ba70" loc="55:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MINDT" ref="0x1050f9d10" loc="45:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:230" name="MAXT" ref="0x1050f4070" loc="46:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="fired" ref="0x105230020" loc="74:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="END_OF_LIST" ref="0x10529ed30" loc="56:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="updateFromTimer" ref="0x1052704c0" loc="71:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="NUM_TIMERS" ref="0x10529e9e0" loc="55:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="generateRandomRead" ref="0x1052e55a0" loc="8:RandomReaderC.nc">
      <component-ref qname="RandomReaderC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="stopDoneTask" ref="0x105385160" loc="101:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="sendDoneTask" ref="0x105305020" loc="145:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="startDoneTask" ref="0x1053841a0" loc="96:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="NUM_CLIENTS" ref="0x10548ca40" loc="48:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="errorTask" ref="0x105489840" loc="169:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="CancelTask" ref="0x1054c4960" loc="126:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
  </constants>
  <functions>
  </functions>
  <typedefs>
    <typedef name="__darwin_pthread_attr_t" ref="0x104431800" loc="113:/usr/include/sys/_types.h">
      <type-tag size="I:64" alignment="I:8"><struct-ref name="_opaque_pthread_attr_t" ref="0x1044244b0"/>
        <typename><typedef-ref name="__darwin_pthread_attr_t" ref="0x104431800"/></typename>
      </type-tag>
    </typedef>
    <typedef name="intptr_t" ref="0x104448a00" loc="30:/usr/include/sys/_types/_intptr_t.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intptr_t" ref="0x104448a00"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_packet_t" ref="0x104bea830" loc="134:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_packet" ref="0x104bebe10"/>
        <typename><typedef-ref name="serial_packet_t" ref="0x104bea830"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR3B_t" ref="0x105084e00" loc="247:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x105084020"/>
        <typename><typedef-ref name="Atm128_TCCR3B_t" ref="0x105084e00"/></typename>
      </type-tag>
    </typedef>
    <typedef name="rune_t" ref="0x1046ba920" loc="30:/usr/include/sys/_types/_rune_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="rune_t" ref="0x1046ba920"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_blkcnt_t" ref="0x10442c260" loc="94:/usr/include/sys/_types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_blkcnt_t" ref="0x10442c260"/></typename>
      </type-int>
    </typedef>
    <typedef name="wchar_t" ref="0x10438ce30" loc="324:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include/stddef.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="wchar_t" ref="0x10438ce30"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_size_t" ref="0x10441fbf0" loc="92:/usr/include/i386/_types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_size_t" ref="0x10441fbf0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Admux_t" ref="0x104dbd5e0" loc="99:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x104dbd110"/>
        <typename><typedef-ref name="Atm128Admux_t" ref="0x104dbd5e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_ino_t" ref="0x10442e5e0" loc="103:/usr/include/sys/_types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_ino_t" ref="0x10442e5e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_footer_t" ref="0x104bf5e40" loc="16:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x104bf5820"/>
        <typename><typedef-ref name="tossim_footer_t" ref="0x104bf5e40"/></typename>
      </type-tag>
    </typedef>
    <typedef name="errno_t" ref="0x1045fb3b0" loc="30:/usr/include/sys/_types/_errno_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="errno_t" ref="0x1045fb3b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int64_t" ref="0x10441c090" loc="46:/usr/include/i386/_types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__int64_t" ref="0x10441c090"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int16_t" ref="0x10441b130" loc="42:/usr/include/i386/_types.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__int16_t" ref="0x10441b130"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_header_t" ref="0x104bebab0" loc="129:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x104bec9b0"/>
        <typename><typedef-ref name="serial_header_t" ref="0x104bebab0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="TMilli" ref="0x104c6ac30" loc="40:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x104c6a8c0"/>
        <typename><typedef-ref name="TMilli" ref="0x104c6ac30"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_RuneEntry" ref="0x104824b30" loc="65:/usr/include/runetype.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref ref="0x1048245b0"/>
        <typename><typedef-ref name="_RuneEntry" ref="0x104824b30"/></typename>
      </type-tag>
    </typedef>
    <typedef name="user_long_t" ref="0x104708140" loc="100:/usr/include/i386/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_long_t" ref="0x104708140"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT0_t" ref="0x105069d10" loc="111:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT0_t" ref="0x105069d10"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1BL_t" ref="0x10507e4e0" loc="278:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BL_t" ref="0x10507e4e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR2_t" ref="0x105068de0" loc="116:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR2_t" ref="0x105068de0"/></typename>
      </type-int>
    </typedef>
    <typedef name="fd_set" ref="0x1049e5a30" loc="48:/usr/include/sys/_types/_fd_def.h">
      <documentation loc="32:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_mote.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:128" alignment="I:4"><struct-ref name="fd_set" ref="0x1049e7080"/>
        <typename><typedef-ref name="fd_set" ref="0x1049e5a30"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_time_t" ref="0x1048e39b0" loc="51:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_tossim.h">
      <documentation loc="32:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x1048e39b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="float_t" ref="0x10473a9a0" loc="59:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include-fixed/math.h">
      <documentation loc="50:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include-fixed/math.h">
        <short>****************************************************************************&#10; Floating point data types                                                  *&#10;*****************************************************************************</short>
      </documentation>
      <type-float cname="float" size="I:4" alignment="I:4">
        <typename><typedef-ref name="float_t" ref="0x10473a9a0"/></typename>
      </type-float>
    </typedef>
    <typedef name="mode_t" ref="0x1047079b0" loc="30:/usr/include/sys/_types/_mode_t.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="mode_t" ref="0x1047079b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="mcontext_t" ref="0x104673380" loc="115:/usr/include/i386/_mcontext.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:712" alignment="I:8"><struct-ref name="__darwin_mcontext64" ref="0x10466a360"/></type-tag>
        <typename><typedef-ref name="mcontext_t" ref="0x104673380"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_TCCR1C_t" ref="0x105082e00" loc="262:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x105082520"/>
        <typename><typedef-ref name="Atm128_TCCR1C_t" ref="0x105082e00"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int_least32_t" ref="0x104443090" loc="40:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include-fixed/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_least32_t" ref="0x104443090"/></typename>
      </type-int>
    </typedef>
    <typedef name="user_size_t" ref="0x104709910" loc="98:/usr/include/i386/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_size_t" ref="0x104709910"/></typename>
      </type-int>
    </typedef>
    <typedef name="__builtin_va_list" ref="0x104384690"  loc="NONE">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x104384530"/></type-tag>
      </type-pointer>
    </typedef>
    <typedef name="__uint32_t" ref="0x10441bc50" loc="45:/usr/include/i386/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uint32_t" ref="0x10441bc50"/></typename>
      </type-int>
    </typedef>
    <typedef name="TMicro" ref="0x104c64be0" loc="42:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x104c64870"/>
        <typename><typedef-ref name="TMicro" ref="0x104c64be0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_nl_item" ref="0x104437b80" loc="39:/usr/include/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_nl_item" ref="0x104437b80"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_wchar_t" ref="0x1044204a0" loc="104:/usr/include/i386/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_wchar_t" ref="0x1044204a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="clock_t" ref="0x1049f3090" loc="30:/usr/include/sys/_types/_clock_t.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="clock_t" ref="0x1049f3090"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1BH_t" ref="0x10507e0d0" loc="277:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BH_t" ref="0x10507e0d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="heap_t" ref="0x10497b8e0" loc="65:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/heap.h">
      <documentation loc="53:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/heap.h">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="heap" ref="0x10497c690"/>
        <typename><typedef-ref name="heap_t" ref="0x10497b8e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="user_ulong_t" ref="0x104708540" loc="101:/usr/include/i386/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_ulong_t" ref="0x104708540"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_ssize_t" ref="0x1044219a0" loc="119:/usr/include/i386/_types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_ssize_t" ref="0x1044219a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint16_t" ref="0x1045d91f0" loc="446:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
        <typename><typedef-ref name="nxle_uint16_t" ref="0x1045d91f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_channel_t" ref="0x104917520" loc="61:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_log.c">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="sim_log_channel" ref="0x104919730"/>
        <typename><typedef-ref name="sim_log_channel_t" ref="0x104917520"/></typename>
      </type-tag>
    </typedef>
    <typedef name="am_group_t" ref="0x104bd8bd0" loc="11:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0x104bd8bd0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR3C_t" ref="0x1050802f0" loc="265:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x105082520"/>
        <typename><typedef-ref name="Atm128_TCCR3C_t" ref="0x1050802f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least8_t" ref="0x104443890" loc="42:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include-fixed/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_least8_t" ref="0x104443890"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT1H_t" ref="0x105080740" loc="269:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1H_t" ref="0x105080740"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3L_t" ref="0x10507f430" loc="272:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3L_t" ref="0x10507f430"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast32_t" ref="0x104448160" loc="55:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include-fixed/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_fast32_t" ref="0x104448160"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least64_t" ref="0x104443490" loc="41:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include-fixed/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_least64_t" ref="0x104443490"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ETIFR_t" ref="0x1050a70d0" loc="324:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1050a8c80"/>
        <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x1050a70d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCNT2_t" ref="0x1050689e0" loc="115:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT2_t" ref="0x1050689e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AL_t" ref="0x10507fc70" loc="276:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AL_t" ref="0x10507fc70"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_mach_port_t" ref="0x10442f020" loc="108:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_mach_port_t" ref="0x10442f020"/></typename>
      </type-int>
    </typedef>
    <typedef name="rsize_t" ref="0x1045fb020" loc="30:/usr/include/sys/_types/_rsize_t.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="rsize_t" ref="0x1045fb020"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_event_t" ref="0x1048ecac0" loc="51:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_event_queue.h">
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x1048ec6d0"/>
        <typename><typedef-ref name="sim_event_t" ref="0x1048ecac0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="error_t" ref="0x104810cb0" loc="67:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/TinyError.h">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="error_t" ref="0x104810cb0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_uid_t" ref="0x104436890" loc="133:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_uid_t" ref="0x104436890"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_SFIOR_t" ref="0x10508e020" loc="178:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x105090b10"/>
        <typename><typedef-ref name="Atm128_SFIOR_t" ref="0x10508e020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_clock_t" ref="0x104421180" loc="117:/usr/include/i386/_types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_clock_t" ref="0x104421180"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least8_t" ref="0x104441840" loc="38:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include-fixed/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_least8_t" ref="0x104441840"/></typename>
      </type-int>
    </typedef>
    <typedef name="FILE" ref="0x10487c2e0" loc="151:/usr/include/stdio.h">
      <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x104870300"/>
        <typename><typedef-ref name="FILE" ref="0x10487c2e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_ADCL_t" ref="0x104db6cf0" loc="161:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCL_t" ref="0x104db6cf0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_gid_t" ref="0x10442d860" loc="99:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_gid_t" ref="0x10442d860"/></typename>
      </type-int>
    </typedef>
    <typedef name="radio_stats_t" ref="0x104bec650" loc="121:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/serial/Serial.h">
      <type-tag size="I:18" alignment="I:2"><struct-ref name="radio_stats" ref="0x104bf0360"/>
        <typename><typedef-ref name="radio_stats_t" ref="0x104bec650"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_ICR1H_t" ref="0x10507ba30" loc="291:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1H_t" ref="0x10507ba30"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3L_t" ref="0x10507a690" loc="294:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3L_t" ref="0x10507a690"/></typename>
      </type-int>
    </typedef>
    <typedef name="user_addr_t" ref="0x104709520" loc="97:/usr/include/i386/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_addr_t" ref="0x104709520"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_packet_t" ref="0x104be6150" loc="59:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_packet.h">
      <documentation loc="32:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_packet.h">
        <short>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.</short>
        <long>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.&#10;&#10; @author Philip Levis&#10; @date   Jan 2 2006&#10;</long>
      </documentation>
      <type-tag size="I:0" alignment="I:1"><struct-ref name="sim_packet" ref="0x104bc8db0"/>
        <typename><typedef-ref name="sim_packet_t" ref="0x104be6150"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128Adcsra_t" ref="0x104db64f0" loc="158:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x104db7d70"/>
        <typename><typedef-ref name="Atm128Adcsra_t" ref="0x104db64f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int8_t" ref="0x10443e8e0" loc="30:/usr/include/sys/_types/_int8_t.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int8_t" ref="0x10443e8e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_output_t" ref="0x1049193c0" loc="54:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_log.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_log_output" ref="0x10491ab00"/>
        <typename><typedef-ref name="sim_log_output_t" ref="0x1049193c0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="suseconds_t" ref="0x1049f7800" loc="30:/usr/include/sys/_types/_suseconds_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="suseconds_t" ref="0x1049f7800"/></typename>
      </type-int>
    </typedef>
    <typedef name="sigset_t" ref="0x10466fa60" loc="30:/usr/include/sys/_types/_sigset_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="sigset_t" ref="0x10466fa60"/></typename>
      </type-int>
    </typedef>
    <typedef name="T32khz" ref="0x104c64430" loc="41:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x104c640c0"/>
        <typename><typedef-ref name="T32khz" ref="0x104c64430"/></typename>
      </type-tag>
    </typedef>
    <typedef name="tossim_header_t" ref="0x104bf54c0" loc="12:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x104bf63c0"/>
        <typename><typedef-ref name="tossim_header_t" ref="0x104bf54c0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ptrdiff_t" ref="0x10438c600" loc="147:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include/stddef.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ptrdiff_t" ref="0x10438c600"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint32_t" ref="0x104441020" loc="31:/usr/include/_types/_uint32_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x104441020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_fp_control_t" ref="0x1046269b0" loc="114:/usr/include/mach/i386/_structs.h">
      <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_control" ref="0x10461e7f0"/>
        <typename><typedef-ref name="__darwin_fp_control_t" ref="0x1046269b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nxle_uint64_t" ref="0x1045d70d0" loc="448:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1" network="nxle_uint64_t">
        <typename><typedef-ref name="nxle_uint64_t" ref="0x1045d70d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint8_t" ref="0x1045cd020" loc="435:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_uint8_t" ref="0x1045cd020"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintptr_t" ref="0x104448de0" loc="30:/usr/include/sys/_types/_uintptr_t.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintptr_t" ref="0x104448de0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3H_t" ref="0x10507f020" loc="271:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3H_t" ref="0x10507f020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_rwlockattr_t" ref="0x104435610" loc="128:/usr/include/sys/_types.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="_opaque_pthread_rwlockattr_t" ref="0x104429a10"/>
        <typename><typedef-ref name="__darwin_pthread_rwlockattr_t" ref="0x104435610"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_fast64_t" ref="0x104448570" loc="56:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include-fixed/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast64_t" ref="0x104448570"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint16_t" ref="0x10441b500" loc="43:/usr/include/i386/_types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__uint16_t" ref="0x10441b500"/></typename>
      </type-int>
    </typedef>
    <typedef name="mcu_power_t" ref="0x104da31b0" loc="120:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="mcu_power_t" ref="0x104da31b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast16_t" ref="0x104445cc0" loc="50:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include-fixed/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int_fast16_t" ref="0x104445cc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AH_t" ref="0x10507f860" loc="275:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AH_t" ref="0x10507f860"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1CL_t" ref="0x10507ed00" loc="280:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CL_t" ref="0x10507ed00"/></typename>
      </type-int>
    </typedef>
    <typedef name="fpos_t" ref="0x104871450" loc="75:/usr/include/stdio.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="fpos_t" ref="0x104871450"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR1B_t" ref="0x105084920" loc="244:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x105084020"/>
        <typename><typedef-ref name="Atm128_TCCR1B_t" ref="0x105084920"/></typename>
      </type-tag>
    </typedef>
    <typedef name="div_t" ref="0x1046b9440" loc="85:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x1046b9020"/>
        <typename><typedef-ref name="div_t" ref="0x1046b9440"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_gain_noise_t" ref="0x104ab1930" loc="6:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_gain.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_gain_noise" ref="0x104ab1150"/>
        <typename><typedef-ref name="sim_gain_noise_t" ref="0x104ab1930"/></typename>
      </type-tag>
    </typedef>
    <typedef name="size_t" ref="0x10438ca40" loc="212:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include/stddef.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="size_t" ref="0x10438ca40"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_suseconds_t" ref="0x104436470" loc="132:/usr/include/sys/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_suseconds_t" ref="0x104436470"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint8_t" ref="0x10439fd50" loc="41:/usr/include/i386/_types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__uint8_t" ref="0x10439fd50"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR0_t" ref="0x105069910" loc="110:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10506ae50"/>
        <typename><typedef-ref name="Atm128_TCCR0_t" ref="0x105069910"/></typename>
      </type-tag>
    </typedef>
    <typedef name="NotReadyMessage" ref="0x104c6f3c0" loc="23:TemperatureMonitor.h">
      <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="NotReadyMessage" ref="0x104c4fd10"/>
        <typename><typedef-ref name="NotReadyMessage" ref="0x104c6f3c0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_am_id_t" ref="0x104bd9aa0" loc="6:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/AM.h">
      <documentation loc="34:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/platform_message.h">
        <short>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.</short>
        <long>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.&#10;&#10; @author Philip Levis&#10; @date   Dec 2 2005&#10; Revision:  $Revision$&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_id_t" ref="0x104bd9aa0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_ct_rune_t" ref="0x10441d0d0" loc="70:/usr/include/i386/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_ct_rune_t" ref="0x10441d0d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_fsfilcnt_t" ref="0x10442d440" loc="98:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_fsfilcnt_t" ref="0x10442d440"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_header_t" ref="0x104c09020" loc="53:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/platform_message.h">
      <type-tag size="I:7" alignment="I:1"><union-ref name="message_header" ref="0x104be8560"/>
        <typename><typedef-ref name="message_header_t" ref="0x104c09020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="gain_entry_t" ref="0x104aa18f0" loc="57:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_gain.h">
      <documentation loc="32:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_gain.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x104aa3dd0"/>
        <typename><typedef-ref name="gain_entry_t" ref="0x104aa18f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="am_addr_t" ref="0x104bf8020" loc="12:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x104bf8020"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int32_t" ref="0x1045ce120" loc="433:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nx_int32_t">
        <typename><typedef-ref name="nx_int32_t" ref="0x1045ce120"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ADCH_t" ref="0x104db68f0" loc="160:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCH_t" ref="0x104db68f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least16_t" ref="0x104443ca0" loc="43:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include-fixed/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint_least16_t" ref="0x104443ca0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint8_t" ref="0x1044407c0" loc="31:/usr/include/_types/_uint8_t.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x1044407c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_socklen_t" ref="0x1044215d0" loc="118:/usr/include/i386/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_socklen_t" ref="0x1044215d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="time_t" ref="0x1049f7380" loc="30:/usr/include/sys/_types/_time_t.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="time_t" ref="0x1049f7380"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_blksize_t" ref="0x10442c6a0" loc="95:/usr/include/sys/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_blksize_t" ref="0x10442c6a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int8_t" ref="0x1045d3cd0" loc="441:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nxle_int8_t">
        <typename><typedef-ref name="nxle_int8_t" ref="0x1045d3cd0"/></typename>
      </type-int>
    </typedef>
    <typedef name="lldiv_t" ref="0x1046b78c0" loc="96:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x1046b74a0"/>
        <typename><typedef-ref name="lldiv_t" ref="0x1046b78c0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_attr_t" ref="0x10466f610" loc="30:/usr/include/sys/_types/_pthread_attr_t.h">
      <type-tag size="I:64" alignment="I:8"><struct-ref name="_opaque_pthread_attr_t" ref="0x1044244b0"/>
        <typename><typedef-ref name="pthread_attr_t" ref="0x10466f610"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pid_t" ref="0x10461ac90" loc="30:/usr/include/sys/_types/_pid_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pid_t" ref="0x10461ac90"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR0_t" ref="0x105068160" loc="112:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR0_t" ref="0x105068160"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint64_t" ref="0x10441c4a0" loc="47:/usr/include/i386/_types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__uint64_t" ref="0x10441c4a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int32_t" ref="0x1045d2bc0" loc="443:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nxle_int32_t">
        <typename><typedef-ref name="nxle_int32_t" ref="0x1045d2bc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_fp_status_t" ref="0x104622a20" loc="164:/usr/include/mach/i386/_structs.h">
      <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_status" ref="0x104626d40"/>
        <typename><typedef-ref name="__darwin_fp_status_t" ref="0x104622a20"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_RuneRange" ref="0x1048236b0" loc="70:/usr/include/runetype.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x104823290"/>
        <typename><typedef-ref name="_RuneRange" ref="0x1048236b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="va_list" ref="0x104871020" loc="98:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include/stdarg.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x104384530"/></type-tag>
        <typename><typedef-ref name="va_list" ref="0x104871020"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="int_fast8_t" ref="0x1044458d0" loc="49:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include-fixed/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_fast8_t" ref="0x1044458d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_cond_t" ref="0x104431d70" loc="115:/usr/include/sys/_types.h">
      <type-tag size="I:48" alignment="I:8"><struct-ref name="_opaque_pthread_cond_t" ref="0x104425020"/>
        <typename><typedef-ref name="__darwin_pthread_cond_t" ref="0x104431d70"/></typename>
      </type-tag>
    </typedef>
    <typedef name="tossim_metadata_t" ref="0x104bf4d50" loc="22:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x104bf4200"/>
        <typename><typedef-ref name="tossim_metadata_t" ref="0x104bf4d50"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_off_t" ref="0x10442f860" loc="110:/usr/include/sys/_types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_off_t" ref="0x10442f860"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_id_t" ref="0x104bd87f0" loc="10:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_id_t" ref="0x104bd87f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="intmax_t" ref="0x104449210" loc="32:/usr/include/_types/_intmax_t.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intmax_t" ref="0x104449210"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlCapture_t" ref="0x105084440" loc="241:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x105084020"/>
        <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x105084440"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_mode_t" ref="0x10442f450" loc="109:/usr/include/sys/_types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__darwin_mode_t" ref="0x10442f450"/></typename>
      </type-int>
    </typedef>
    <typedef name="AverageMessage" ref="0x104c50c60" loc="14:TemperatureMonitor.h">
      <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="AverageMessage" ref="0x104c50380"/>
        <typename><typedef-ref name="AverageMessage" ref="0x104c50c60"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_ino64_t" ref="0x10442e180" loc="101:/usr/include/sys/_types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_ino64_t" ref="0x10442e180"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR2_t" ref="0x1050685e0" loc="114:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10506ae50"/>
        <typename><typedef-ref name="Atm128_TCCR2_t" ref="0x1050685e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="serial_metadata_t" ref="0x104be8200" loc="138:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/serial/Serial.h">
      <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="serial_metadata" ref="0x104beaba0"/>
        <typename><typedef-ref name="serial_metadata_t" ref="0x104be8200"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint16_t" ref="0x104440ba0" loc="31:/usr/include/_types/_uint16_t.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x104440ba0"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int8_t" ref="0x1046fa130" loc="81:/usr/include/i386/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_int8_t" ref="0x1046fa130"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT1L_t" ref="0x105080b50" loc="270:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1L_t" ref="0x105080b50"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CH_t" ref="0x10507b200" loc="287:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CH_t" ref="0x10507b200"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_group_t" ref="0x104bd8020" loc="7:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_group_t" ref="0x104bd8020"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_metadata_t" ref="0x104c08420" loc="61:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/platform_message.h">
      <type-tag size="I:4" alignment="I:1"><union-ref name="message_metadata" ref="0x104c09d60"/>
        <typename><typedef-ref name="message_metadata_t" ref="0x104c08420"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_time_t" ref="0x104421d60" loc="120:/usr/include/i386/_types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_time_t" ref="0x104421d60"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint32_t" ref="0x1045cde60" loc="437:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
        <typename><typedef-ref name="nx_uint32_t" ref="0x1045cde60"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_uuid_t" ref="0x104437290" loc="135:/usr/include/sys/_types.h">
      <type-array elements="I:16" size="I:16" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="__darwin_uuid_t" ref="0x104437290"/></typename>
      </type-array>
    </typedef>
    <typedef name="__darwin_dev_t" ref="0x10442cab0" loc="96:/usr/include/sys/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_dev_t" ref="0x10442cab0"/></typename>
      </type-int>
    </typedef>
    <typedef name="hashtable_t" ref="0x10490e0d0" loc="10:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/hashtable.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x104910cb0"/>
        <typename><typedef-ref name="hashtable_t" ref="0x10490e0d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="dev_t" ref="0x104707590" loc="30:/usr/include/sys/_types/_dev_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="dev_t" ref="0x104707590"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_rune_t" ref="0x104420910" loc="109:/usr/include/i386/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_rune_t" ref="0x104420910"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int32_t" ref="0x1046fa8b0" loc="83:/usr/include/i386/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int32_t" ref="0x1046fa8b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast8_t" ref="0x1044468b0" loc="53:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include-fixed/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_fast8_t" ref="0x1044468b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="idtype_t" ref="0x10461a860" loc="83:/usr/include/sys/wait.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x10461be00"/>
        <typename><typedef-ref name="idtype_t" ref="0x10461a860"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_RuneCharClass" ref="0x1048342f0" loc="75:/usr/include/runetype.h">
      <type-tag size="I:20" alignment="I:4"><struct-ref ref="0x104823e80"/>
        <typename><typedef-ref name="_RuneCharClass" ref="0x1048342f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128Assr_t" ref="0x105065c30" loc="130:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x105065810"/>
        <typename><typedef-ref name="Atm128Assr_t" ref="0x105065c30"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BL_t" ref="0x10507cda0" loc="286:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BL_t" ref="0x10507cda0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int16_t" ref="0x1045d09e0" loc="432:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nx_int16_t">
        <typename><typedef-ref name="nx_int16_t" ref="0x1045d09e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pid_t" ref="0x10442fc70" loc="111:/usr/include/sys/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_pid_t" ref="0x10442fc70"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR1L_t" ref="0x10507be30" loc="292:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1L_t" ref="0x10507be30"/></typename>
      </type-int>
    </typedef>
    <typedef name="ucontext_t" ref="0x10466f130" loc="48:/usr/include/sys/_types/_ucontext.h">
      <type-tag size="I:56" alignment="I:8"><struct-ref name="__darwin_ucontext" ref="0x104672810"/>
        <typename><typedef-ref name="ucontext_t" ref="0x10466f130"/></typename>
      </type-tag>
    </typedef>
    <typedef name="register_t" ref="0x1047090d0" loc="87:/usr/include/i386/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="register_t" ref="0x1047090d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_key_t" ref="0x1044327f0" loc="118:/usr/include/sys/_types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_pthread_key_t" ref="0x1044327f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ETIMSK_t" ref="0x1050abb90" loc="309:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x1050ab770"/>
        <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x1050abb90"/></typename>
      </type-tag>
    </typedef>
    <typedef name="rlim_t" ref="0x10468a020" loc="89:/usr/include/sys/resource.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="rlim_t" ref="0x10468a020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_natural_t" ref="0x10441cc90" loc="50:/usr/include/i386/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_natural_t" ref="0x10441cc90"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerControl_t" ref="0x1050692b0" loc="108:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <documentation loc="11:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10506ae50"/>
        <typename><typedef-ref name="Atm128TimerControl_t" ref="0x1050692b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ssize_t" ref="0x1045faa20" loc="30:/usr/include/sys/_types/_ssize_t.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ssize_t" ref="0x1045faa20"/></typename>
      </type-int>
    </typedef>
    <typedef name="sig_atomic_t" ref="0x104618630" loc="39:/usr/include/i386/signal.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="sig_atomic_t" ref="0x104618630"/></typename>
      </type-int>
    </typedef>
    <typedef name="int32_t" ref="0x104440020" loc="30:/usr/include/sys/_types/_int32_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int32_t" ref="0x104440020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_mbstate_t" ref="0x10441f190" loc="81:/usr/include/i386/_types.h">
      <type-tag size="I:128" alignment="I:8"><union-ref ref="0x10441d8c0"/>
        <typename><typedef-ref name="__darwin_mbstate_t" ref="0x10441f190"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint64_t" ref="0x104441440" loc="31:/usr/include/_types/_uint64_t.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint64_t" ref="0x104441440"/></typename>
      </type-int>
    </typedef>
    <typedef name="syscall_arg_t" ref="0x104707160" loc="111:/usr/include/i386/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="syscall_arg_t" ref="0x104707160"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_atomic_t" ref="0x104dae2f0" loc="94:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__nesc_atomic_t" ref="0x104dae2f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_sigset_t" ref="0x104436020" loc="131:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_sigset_t" ref="0x104436020"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int64_t" ref="0x1045da320" loc="444:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="long long" size="I:8" alignment="I:1" network="nxle_int64_t">
        <typename><typedef-ref name="nxle_int64_t" ref="0x1045da320"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int16_t" ref="0x1045d2490" loc="442:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nxle_int16_t">
        <typename><typedef-ref name="nxle_int16_t" ref="0x1045d2490"/></typename>
      </type-int>
    </typedef>
    <typedef name="imaxdiv_t" ref="0x10444d5c0" loc="242:/usr/include/inttypes.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x10444d1a0"/>
        <typename><typedef-ref name="imaxdiv_t" ref="0x10444d5c0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR1A_t" ref="0x10508b2b0" loc="205:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10508c8a0"/>
        <typename><typedef-ref name="Atm128_TCCR1A_t" ref="0x10508b2b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least32_t" ref="0x1044450d0" loc="44:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include-fixed/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_least32_t" ref="0x1044450d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_mutex_t" ref="0x104432d80" loc="120:/usr/include/sys/_types.h">
      <type-tag size="I:64" alignment="I:8"><struct-ref name="_opaque_pthread_mutex_t" ref="0x104426370"/>
        <typename><typedef-ref name="__darwin_pthread_mutex_t" ref="0x104432d80"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__mbstate_t" ref="0x10441dce0" loc="79:/usr/include/i386/_types.h">
      <type-tag size="I:128" alignment="I:8"><union-ref ref="0x10441d8c0"/>
        <typename><typedef-ref name="__mbstate_t" ref="0x10441dce0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="wint_t" ref="0x104825990" loc="31:/usr/include/sys/_types/_wint_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="wint_t" ref="0x104825990"/></typename>
      </type-int>
    </typedef>
    <typedef name="stack_t" ref="0x104672490" loc="42:/usr/include/sys/_types/_sigaltstack.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="__darwin_sigaltstack" ref="0x104673740"/>
        <typename><typedef-ref name="stack_t" ref="0x104672490"/></typename>
      </type-tag>
    </typedef>
    <typedef name="message_footer_t" ref="0x104c099e0" loc="57:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/platform_message.h">
      <type-tag size="I:2" alignment="I:1"><union-ref name="message_footer" ref="0x104c09380"/>
        <typename><typedef-ref name="message_footer_t" ref="0x104c099e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BH_t" ref="0x10507c990" loc="285:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BH_t" ref="0x10507c990"/></typename>
      </type-int>
    </typedef>
    <typedef name="off_t" ref="0x1048c8090" loc="30:/usr/include/sys/_types/_off_t.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="off_t" ref="0x1048c8090"/></typename>
      </type-int>
    </typedef>
    <typedef name="ct_rune_t" ref="0x1046ba500" loc="31:/usr/include/sys/_types/_ct_rune_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ct_rune_t" ref="0x1046ba500"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int64_t" ref="0x1045ce830" loc="434:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="long long" size="I:8" alignment="I:1" network="nx_int64_t">
        <typename><typedef-ref name="nx_int64_t" ref="0x1045ce830"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_once_t" ref="0x104433930" loc="124:/usr/include/sys/_types.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="_opaque_pthread_once_t" ref="0x1044286a0"/>
        <typename><typedef-ref name="__darwin_pthread_once_t" ref="0x104433930"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerCtrlClock_t" ref="0x105082940" loc="259:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x105082520"/>
        <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x105082940"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__int8_t" ref="0x10439f810" loc="37:/usr/include/i386/_types.h">
      <documentation loc="588:/usr/include/sys/cdefs.h">
        <short>***************************************&#10;  Public darwin-specific feature macros&#10;****************************************</short>
      </documentation>
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__int8_t" ref="0x10439f810"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast16_t" ref="0x104446cc0" loc="54:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include-fixed/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint_fast16_t" ref="0x104446cc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3AL_t" ref="0x10507c580" loc="284:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AL_t" ref="0x10507c580"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_wint_t" ref="0x104420cd0" loc="112:/usr/include/i386/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_wint_t" ref="0x104420cd0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintmax_t" ref="0x104449630" loc="32:/usr/include/_types/_uintmax_t.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintmax_t" ref="0x104449630"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_addr_t" ref="0x104bd8430" loc="8:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_am_addr_t" ref="0x104bd8430"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint16_t" ref="0x1045cd740" loc="436:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_uint16_t" ref="0x1045cd740"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_fsblkcnt_t" ref="0x10442d020" loc="97:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_fsblkcnt_t" ref="0x10442d020"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast32_t" ref="0x1044460d0" loc="51:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include-fixed/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_fast32_t" ref="0x1044460d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least16_t" ref="0x104441c40" loc="39:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include-fixed/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int_least16_t" ref="0x104441c40"/></typename>
      </type-int>
    </typedef>
    <typedef name="ldiv_t" ref="0x1046b9e20" loc="90:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x1046b9a00"/>
        <typename><typedef-ref name="ldiv_t" ref="0x1046b9e20"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int64_t" ref="0x1046facb0" loc="84:/usr/include/i386/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_int64_t" ref="0x1046facb0"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int16_t" ref="0x1046fa4f0" loc="82:/usr/include/i386/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_int16_t" ref="0x1046fa4f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIFR_t" ref="0x10505fdc0" loc="163:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10505f9a0"/>
        <typename><typedef-ref name="Atm128_TIFR_t" ref="0x10505fdc0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_va_list" ref="0x1044200d0" loc="98:/usr/include/i386/_types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x104384530"/></type-tag>
        <typename><typedef-ref name="__darwin_va_list" ref="0x1044200d0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="siginfo_t" ref="0x104674180" loc="185:/usr/include/sys/signal.h">
      <type-tag size="I:104" alignment="I:8"><struct-ref name="__siginfo" ref="0x1046773f0"/>
        <typename><typedef-ref name="siginfo_t" ref="0x104674180"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_id_t" ref="0x10442dc80" loc="100:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_id_t" ref="0x10442dc80"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_wctype_t" ref="0x10443e460" loc="42:/usr/include/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_wctype_t" ref="0x10443e460"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR3A_t" ref="0x10508b790" loc="208:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10508c8a0"/>
        <typename><typedef-ref name="Atm128_TCCR3A_t" ref="0x10508b790"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least64_t" ref="0x1044454e0" loc="45:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include-fixed/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_least64_t" ref="0x1044454e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int32_t" ref="0x10441b880" loc="44:/usr/include/i386/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__int32_t" ref="0x10441b880"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_ptrdiff_t" ref="0x10441f7b0" loc="84:/usr/include/i386/_types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_ptrdiff_t" ref="0x10441f7b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_intptr_t" ref="0x10441c870" loc="49:/usr/include/i386/_types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_intptr_t" ref="0x10441c870"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_condattr_t" ref="0x1044323b0" loc="117:/usr/include/sys/_types.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="_opaque_pthread_condattr_t" ref="0x1044259a0"/>
        <typename><typedef-ref name="__darwin_pthread_condattr_t" ref="0x1044323b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="double_t" ref="0x10473ae10" loc="60:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include-fixed/math.h">
      <type-float cname="double" size="I:8" alignment="I:8">
        <typename><typedef-ref name="double_t" ref="0x10473ae10"/></typename>
      </type-float>
    </typedef>
    <typedef name="bool" ref="0x1048e5810" loc="65:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/tos.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x1048e5810"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_hash_t" ref="0x104a2fbb0" loc="71:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_noise.h">
      <documentation loc="32:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-tag size="I:488" alignment="I:8"><struct-ref name="sim_noise_hash_t" ref="0x104a30790"/>
        <typename><typedef-ref name="sim_noise_hash_t" ref="0x104a2fbb0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="rusage_info_t" ref="0x104686110" loc="190:/usr/include/sys/resource.h">
      <documentation loc="131:/usr/include/sys/resource.h">
        <short>***&#10; RESOURCE USAGE&#10;</short>
      </documentation>
      <type-pointer size="I:8" alignment="I:8">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="rusage_info_t" ref="0x104686110"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__darwin_pthread_mutexattr_t" ref="0x1044333c0" loc="122:/usr/include/sys/_types.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="_opaque_pthread_mutexattr_t" ref="0x104426cf0"/>
        <typename><typedef-ref name="__darwin_pthread_mutexattr_t" ref="0x1044333c0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_pthread_t" ref="0x104435b60" loc="130:/usr/include/sys/_types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:1184" alignment="I:8"><struct-ref name="_opaque_pthread_t" ref="0x10442a3b0"/></type-tag>
        <typename><typedef-ref name="__darwin_pthread_t" ref="0x104435b60"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__gnuc_va_list" ref="0x1049104d0" loc="40:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include/stdarg.h">
      <documentation loc="32:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_log.h">
        <short>&#10; The TOSSIM logging system.</short>
        <long>&#10; The TOSSIM logging system. Unlike in TinyOS 1.x, this logging&#10; system supports an arbitrary number of channels, denoted by&#10; a string identifier. A channel can be connected to any number&#10; of outputs, and a debug statement can be associated with any&#10; number of channels.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x104384530"/></type-tag>
        <typename><typedef-ref name="__gnuc_va_list" ref="0x1049104d0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="nxle_uint8_t" ref="0x1045daa50" loc="445:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
        <typename><typedef-ref name="nxle_uint8_t" ref="0x1045daa50"/></typename>
      </type-int>
    </typedef>
    <typedef name="user_off_t" ref="0x104708d00" loc="103:/usr/include/i386/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_off_t" ref="0x104708d00"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3AH_t" ref="0x10507c170" loc="283:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AH_t" ref="0x10507c170"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CL_t" ref="0x10507b610" loc="288:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CL_t" ref="0x10507b610"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3H_t" ref="0x10507a290" loc="293:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3H_t" ref="0x10507a290"/></typename>
      </type-int>
    </typedef>
    <typedef name="int64_t" ref="0x1044403f0" loc="30:/usr/include/sys/_types/_int64_t.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int64_t" ref="0x1044403f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int16_t" ref="0x10443ec70" loc="30:/usr/include/sys/_types/_int16_t.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int16_t" ref="0x10443ec70"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_mach_port_name_t" ref="0x10442eac0" loc="107:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_mach_port_name_t" ref="0x10442eac0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast64_t" ref="0x1044464c0" loc="52:/usr/local/lib/gcc/x86_64-apple-darwin13.0.0/4.9.0/include-fixed/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast64_t" ref="0x1044464c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_wctrans_t" ref="0x10443e020" loc="40:/usr/include/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_wctrans_t" ref="0x10443e020"/></typename>
      </type-int>
    </typedef>
    <typedef name="uid_t" ref="0x10466e020" loc="30:/usr/include/sys/_types/_uid_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uid_t" ref="0x10466e020"/></typename>
      </type-int>
    </typedef>
    <typedef name="user_time_t" ref="0x104708920" loc="102:/usr/include/i386/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_time_t" ref="0x104708920"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_t" ref="0x104c07d80" loc="19:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/types/message.h">
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x104c08750"/>
        <typename><typedef-ref name="message_t" ref="0x104c07d80"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_uint64_t" ref="0x1045d35b0" loc="438:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1" network="nx_uint64_t">
        <typename><typedef-ref name="nx_uint64_t" ref="0x1045d35b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIMSK_t" ref="0x105062590" loc="146:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x105062170"/>
        <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x105062590"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_useconds_t" ref="0x104436ce0" loc="134:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_useconds_t" ref="0x104436ce0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sig_t" ref="0x1046842a0" loc="328:/usr/include/sys/signal.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="sig_t" ref="0x1046842a0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="node_t" ref="0x10498b890" loc="65:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/heap.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="node" ref="0x10498b080"/>
        <typename><typedef-ref name="node_t" ref="0x10498b890"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_int8_t" ref="0x1045d02d0" loc="431:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
        <typename><typedef-ref name="nx_int8_t" ref="0x1045d02d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_node_t" ref="0x104a2b020" loc="83:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/sim_noise.h">
      <type-tag size="I:80" alignment="I:8"><struct-ref name="sim_noise_node_t" ref="0x104a2d020"/>
        <typename><typedef-ref name="sim_noise_node_t" ref="0x104a2b020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="id_t" ref="0x1046180d0" loc="30:/usr/include/sys/_types/_id_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="id_t" ref="0x1046180d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="user_ssize_t" ref="0x104709d00" loc="99:/usr/include/i386/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_ssize_t" ref="0x104709d00"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_uuid_string_t" ref="0x1044377b0" loc="136:/usr/include/sys/_types.h">
      <type-array elements="I:37" size="I:37" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="__darwin_uuid_string_t" ref="0x1044377b0"/></typename>
      </type-array>
    </typedef>
    <typedef name="AverageRequestMessage" ref="0x104c4f9a0" loc="19:TemperatureMonitor.h">
      <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="AverageRequestMessage" ref="0x104c4f080"/>
        <typename><typedef-ref name="AverageRequestMessage" ref="0x104c4f9a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nxle_uint32_t" ref="0x1045d9950" loc="447:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nxle_uint32_t">
        <typename><typedef-ref name="nxle_uint32_t" ref="0x1045d9950"/></typename>
      </type-int>
    </typedef>
    <typedef name="uart_id_t" ref="0x104bf31c0" loc="83:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/serial/Serial.h">
      <documentation loc="71:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uart_id_t" ref="0x104bf31c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="_RuneLocale" ref="0x10482eab0" loc="106:/usr/include/runetype.h">
      <type-tag size="I:3208" alignment="I:8"><struct-ref ref="0x10482fbe0"/>
        <typename><typedef-ref name="_RuneLocale" ref="0x10482eab0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_pthread_rwlock_t" ref="0x104435020" loc="126:/usr/include/sys/_types.h">
      <type-tag size="I:200" alignment="I:8"><struct-ref name="_opaque_pthread_rwlock_t" ref="0x104429080"/>
        <typename><typedef-ref name="__darwin_pthread_rwlock_t" ref="0x104435020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerCtrlCompare_t" ref="0x10508ccc0" loc="202:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10508c8a0"/>
        <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x10508ccc0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR1CH_t" ref="0x10507e8f0" loc="279:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CH_t" ref="0x10507e8f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_sillytask_sendRequestToNode" ref="0x104cf1990" loc="61:TemperatureMonitorC.nc">
      <component-ref qname="TemperatureMonitorC"/>
      <type-array elements="I:0" size="I:0" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_fired" ref="0x1052305c0" loc="74:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_updateFromTimer" ref="0x105270a70" loc="71:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="Timer_t" ref="0x10529c390" loc="66:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0x10529dca0"/>
        <typename><typedef-ref name="Timer_t" scoped="" ref="0x10529c390"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_generateRandomRead" ref="0x1052e5b60" loc="8:RandomReaderC.nc">
      <component-ref qname="RandomReaderC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_startDoneTask" ref="0x105384940" loc="96:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:4" size="I:16" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_stopDoneTask" ref="0x105385700" loc="101:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:5" size="I:20" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendDoneTask" ref="0x1053055c0" loc="145:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:6" size="I:24" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="receive_message_t" ref="0x10537d5d0" loc="64:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:64" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x10537d160"/>
        <typename><typedef-ref name="receive_message_t" scoped="" ref="0x10537d5d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="queue_entry_t" ref="0x105482480" loc="57:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-tag size="I:8" alignment="I:8"><struct-ref scoped="" ref="0x105482110"/>
        <typename><typedef-ref name="queue_entry_t" scoped="" ref="0x105482480"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_errorTask" ref="0x105489de0" loc="169:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_CancelTask" ref="0x1054c3020" loc="126:/Users/patelliandrea/Desktop/tinyos-2.x-master/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
  </typedefs>
</nesc>
